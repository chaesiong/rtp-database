WITH 
OWNERS AS (
    SELECT 'DL_COMMON'                  AS OWNER FROM DUAL UNION ALL
    SELECT 'LOGGER'                     AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_DBA'                     AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_USER_MANAGEMENT'         AS OWNER FROM DUAL UNION ALL
    SELECT 'APEX_USER_MANAGEMENT'       AS OWNER FROM DUAL UNION ALL
    SELECT 'USER_MANAGEMENT'            AS OWNER FROM DUAL UNION ALL   
    SELECT 'DL_BIOSTORE_BLACKLIST'      AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_BIOSTORE_MOVEMENTS'      AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_BORDERCONTROL'           AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_BLACKLIST'               AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_BORDERCONTROL_DATAMART'  AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_STAGING4PIBICS'          AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_STAGING4PIBICS_INTF'     AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_INTERFACE'               AS OWNER FROM DUAL UNION ALL
    SELECT 'PIBICSDM2_RO'               AS OWNER FROM DUAL UNION ALL
    SELECT 'PIBICSDM2'                  AS OWNER FROM DUAL UNION ALL
    SELECT 'BIO_BD'                     AS OWNER FROM DUAL UNION ALL
    SELECT 'SERVAPP'                    AS OWNER FROM DUAL UNION ALL
    SELECT 'JASPER_REPORTING'           AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_MAINTENANCE'             AS OWNER FROM DUAL UNION ALL
    SELECT 'DL_STAGING'                 AS OWNER FROM DUAL
),
OBJECT_TYPES AS (
    SELECT 'PACKAGE'            AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'PACKAGE BODY'       AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'PROCEDURE'          AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'MATERIALIZED VIEW'  AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'SYNONYM'            AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'TYPE'               AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'TYPE BODY'          AS OBJECT_TYPE FROM DUAL UNION ALL            
    SELECT 'SEQUENCE'           AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'FUNCTION'           AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'TRIGGER'            AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'TABLE'              AS OBJECT_TYPE FROM DUAL UNION ALL
    SELECT 'VIEW'               AS OBJECT_TYPE FROM DUAL
),
OBJECT_SELECT AS (
    SELECT
        ROWNUM SRT,
        O.OWNER,
        O.OBJECT_NAME,
        O.OBJECT_TYPE,
        '   SELECT ''' || O.OWNER || ''' OWNER, ''' || O.OBJECT_NAME || ''' OBJECT_NAME, ''' || O.OBJECT_TYPE || ''' OBJECT_TYPE FROM DUAL' ||
        CASE WHEN ROWNUM < COUNT(*) OVER (PARTITION BY NULL) THEN ' UNION ALL' ELSE ')' END STMT
    FROM
        DBA_OBJECTS O
    WHERE
        O.OWNER IN (SELECT OWNER FROM OWNERS)
        AND OBJECT_TYPE IN (SELECT OBJECT_TYPE FROM OBJECT_TYPES)
    ORDER BY 
        O.OWNER, O.OBJECT_TYPE, O.OBJECT_NAME
)
SELECT STMT FROM (
    SELECT 
        -1 SRT,
        'CREATE TABLE SYSTEM.MISSING_OBJECTS AS SELECT * FROM (' STMT
    FROM DUAL
    UNION ALL
    SELECT 
        0 SRT,
        ' WITH OBJECTS AS (' STMT
    FROM DUAL
    UNION ALL    
    SELECT
        OS.SRT,
        OS.STMT
    FROM
        OBJECT_SELECT OS
    UNION ALL
    SELECT
        (SELECT COUNT(*) FROM OBJECT_SELECT) + 1 SRT,
        'SELECT OWNER, OBJECT_NAME, OBJECT_TYPE FROM OBJECTS' STMT
    FROM DUAL
    UNION ALL
    SELECT
        (SELECT COUNT(*) FROM OBJECT_SELECT) + 2 SRT,
        'WHERE (OWNER, OBJECT_NAME, OBJECT_TYPE) NOT IN' STMT
    FROM DUAL  
    UNION ALL
    SELECT
        (SELECT COUNT(*) FROM OBJECT_SELECT) + 3 SRT,
        '(SELECT OWNER, OBJECT_NAME, OBJECT_TYPE FROM DBA_OBJECTS));' STMT
    FROM DUAL     
) ORDER BY SRT NULLS LAST    