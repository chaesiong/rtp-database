
-- Generated by ORDS REST Data Services 18.4.0.r3541002
-- Schema: DL_BORDERCONTROL Date: removed for diff
--

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'DL_BORDERCONTROL',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'dl_bordercontrol',
      p_auto_rest_auth      => FALSE);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'SessionBagRestService',
      p_base_path      => '/SessionBagRestService/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'SessionBagRestService',
      p_pattern        => 'uploadintosessionbag/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'SessionBagRestService',
      p_pattern        => 'uploadintosessionbag/',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         =>
'declare
 l_workspace_id number;
 l_app_id number;
 l_blob blob;
begin

l_blob := :body;

INSERT INTO dl_bordercontrol.xxtmp_mps_blob (BLOB_VALUE, TYPE, SESSIONID)
VALUES (l_blob, :MVMNTID || ''-'' || :COLL_NAME, :SESSIONID);

select WORKSPACE_ID
into l_workspace_id
from APEX_WORKSPACES
where WORKSPACE = ''DL_BORDERCONTROL'';

Select APPLICATION_ID
into l_app_id
from APEX_APPLICATIONS
where ALIAS = ''BMBS'';

wwv_flow_api.set_security_group_id(1672400873050999);
wwv_flow.g_flow_id := l_app_id;
wwv_flow.g_instance := :SESSIONID;

if :MVMNTID is null then
    APEX_COLLECTION.UPDATE_MEMBER (
	p_collection_name => :COLL_NAME,
	p_seq  => 1,
	p_blob001 => l_blob);
	--
elsif :COLL_NAME = ''MOVEMENT_PHOTO'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set LIVE_PHOTO = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_LL'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_LL = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_LR'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_LR = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_LM'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_LM = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_LI'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_LI = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_LT'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_LT = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_RL'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_RL = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_RR'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_RR = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_RM'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_RM = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_RI'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_RI = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_WSQ_RT'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set WSQ_RT = l_blob
	where MVMNT_ID = :MVMNTID;
	--
	/*
elsif :COLL_NAME = ''VISA_IMAGE'' then
	update DL_BORDERCONTROL.VISAS
	set VISA_IMAGE = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''LANDINGCARD_IMAGE'' then
	update DL_BORDERCONTROL.ENTRY_FORMS
	set FORM_IMAGE = l_blob
	where MVMNT_ID = :MVMNTID;
	--
	*/
elsif :COLL_NAME = ''P17_FP_TEMPLATE_LL'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_LL = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_LR'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_LR = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_LM'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_LM = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_LI'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_LI = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_LT'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_LT = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_RL'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_RL = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_RR'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_RR = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_RM'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_RM = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_RI'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_RI = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''P17_FP_TEMPLATE_RT'' then
	update DL_BORDERCONTROL.MOVEMENTS_BLOB
	set TEMPLATE_RT = l_blob
	where MVMNT_ID = :MVMNTID;
	--
elsif :COLL_NAME = ''CHILD_1'' then
	APEX_COLLECTION.UPDATE_MEMBER (
	p_collection_name => ''COLL_FELLOW_PASSENGER'',
	p_seq  => :MVMNTID,
	p_blob001 => l_blob);
	--
else
	APEX_COLLECTION.UPDATE_MEMBER (
	p_collection_name => :COLL_NAME,
	p_seq  => 1,
	p_blob001 => l_blob);
--
end if;
--
commit;
end;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SessionBagRestService',
      p_pattern            => 'uploadintosessionbag/',
      p_method             => 'POST',
      p_name               => 'COLL_NAME',
      p_bind_variable_name => 'COLL_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SessionBagRestService',
      p_pattern            => 'uploadintosessionbag/',
      p_method             => 'POST',
      p_name               => 'MVMNTID',
      p_bind_variable_name => 'MVMNTID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'SessionBagRestService',
      p_pattern            => 'uploadintosessionbag/',
      p_method             => 'POST',
      p_name               => 'SESSIONID',
      p_bind_variable_name => 'SESSIONID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);



COMMIT;

END;


/
timing for: TIMER_REST_EXPORT
Elapsed: 00:00:00.02
