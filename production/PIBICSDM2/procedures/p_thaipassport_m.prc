CREATE OR REPLACE EDITIONABLE PROCEDURE "PIBICSDM2"."P_THAIPASSPORT_M" (v_dstart varchar2,v_dend varchar2)
IS
 var_rows NUMBER;
 vstdate date;
 veddate date;
 
BEGIN
 /* Create date : 6-12-2108 */
 --v_dstart := TO_CHAR (TRUNC (SYSDATE) - 1, 'yyyymmdd');
 --v_dend := TO_CHAR (TRUNC (SYSDATE), 'yyyymmdd');

 vstdate :=sysdate;

 MERGE INTO PIBICSDM2.THAIPASSPORT DM
  USING (SELECT * 
     FROM PIBICS.THAIPASSPORT@PIBICS_PROD
     WHERE CREATE_DATE >= TO_DATE(v_dstart,'yyyymmdd')
      AND CREATE_DATE < TO_DATE(v_dend,'yyyymmdd')
      AND CREATE_DATE = UPDATE_DATE) P
  ON (DM.PASSPORTNO = P.PASSPORTNO
      and DM.CITIZENID = P.CITIZENID)
 WHEN MATCHED 
 THEN 
  UPDATE SET    -- DM.CITIZENID = P.CITIZENID,
     DM.PERSONID = P.PERSONID,
     DM.PASSNO = P.PASSNO,
     DM.TFAMILYNM = P.TFAMILYNM,
     DM.TFIRSTNM = P.TFIRSTNM,
     DM.TMIDDLENM = P.TMIDDLENM,
     DM.EFAMILYNM = P.EFAMILYNM,
     DM.EFIRSTNM = P.EFIRSTNM,
     DM.EMIDDLENM = P.EMIDDLENM,
     DM.SEX = P.SEX,
     DM.NATIONCD = P.NATIONCD,
     DM.HEIGHT = P.HEIGHT,
     DM.WEIGHT = P.WEIGHT,
     DM.ADDR = P.ADDR,
     DM.DISTRICT = P.DISTRICT,
     DM.CITYCD = P.CITYCD,
     DM.STATECD = P.STATECD,
     DM.ZIPCODE = P.ZIPCODE,
     DM.TELNO = P.TELNO,
     DM.PASSPORTDTE = P.PASSPORTDTE,
     DM.PASSPORTEXPDTE = P.PASSPORTEXPDTE,
     DM.MICROROLLNO = P.MICROROLLNO,
     DM.MICROPICNO = P.MICROPICNO,
     DM.MICROPICNOL = P.MICROPICNOL,
     DM.BIRTHDTE = P.BIRTHDTE,
     DM.IMGPASS = P.IMGPASS,
     DM.BIRTHPLACE = P.BIRTHPLACE,
     DM.DOMICILE = P.DOMICILE,
     DM.PPS_SEQNO = P.PPS_SEQNO,
     DM.PASS_SEQNO = P.PASS_SEQNO,
     DM.CREATE_DATE = P.CREATE_DATE,
     DM.UPDATE_DATE = P.UPDATE_DATE,
     DM.TYPEDPASSPORT = P.TYPEDPASSPORT,
     DM.PASSPORTSTS = P.PASSPORTSTS,
     DM.TMPPASS_SEQNO = P.TMPPASS_SEQNO
 WHEN NOT MATCHED 
 THEN 
  INSERT (     DM.CITIZENID,
     DM.PERSONID,
     DM.PASSPORTNO,
     DM.PASSNO,
     DM.TFAMILYNM,
     DM.TFIRSTNM,
     DM.TMIDDLENM,
     DM.EFAMILYNM,
     DM.EFIRSTNM,
     DM.EMIDDLENM,
     DM.SEX,
     DM.NATIONCD,
     DM.HEIGHT,
     DM.WEIGHT,
     DM.ADDR,
     DM.DISTRICT,
     DM.CITYCD,
     DM.STATECD,
     DM.ZIPCODE,
     DM.TELNO,
     DM.PASSPORTDTE,
     DM.PASSPORTEXPDTE,
     DM.MICROROLLNO,
     DM.MICROPICNO,
     DM.MICROPICNOL,
     DM.BIRTHDTE,
     DM.IMGPASS,
     DM.BIRTHPLACE,
     DM.DOMICILE,
     DM.PPS_SEQNO,
     DM.PASS_SEQNO,
     DM.CREATE_DATE,
     DM.UPDATE_DATE,
     DM.TYPEDPASSPORT,
     DM.PASSPORTSTS,
     DM.TMPPASS_SEQNO) 
  VALUES (     P.CITIZENID,
     P.PERSONID,
     P.PASSPORTNO,
     P.PASSNO,
     P.TFAMILYNM,
     P.TFIRSTNM,
     P.TMIDDLENM,
     P.EFAMILYNM,
     P.EFIRSTNM,
     P.EMIDDLENM,
     P.SEX,
     P.NATIONCD,
     P.HEIGHT,
     P.WEIGHT,
     P.ADDR,
     P.DISTRICT,
     P.CITYCD,
     P.STATECD,
     P.ZIPCODE,
     P.TELNO,
     P.PASSPORTDTE,
     P.PASSPORTEXPDTE,
     P.MICROROLLNO,
     P.MICROPICNO,
     P.MICROPICNOL,
     P.BIRTHDTE,
     P.IMGPASS,
     P.BIRTHPLACE,
     P.DOMICILE,
     P.PPS_SEQNO,
     P.PASS_SEQNO,
     P.CREATE_DATE,
     P.UPDATE_DATE,
     P.TYPEDPASSPORT,
     P.PASSPORTSTS,
     P.TMPPASS_SEQNO);

 var_rows := SQL%ROWCOUNT;
 veddate :=SYSDATE;

--INSERT INTO IMPORT_LOG   VALUES ('THAIPASSPORT_C', var_rows, SYSDATE);
INSERT INTO IMPORT_LOG_DETAIL VALUES ('THAIPASSPORT_C_M', var_rows,SYSDATE,v_dstart,v_dend,vstdate,veddate);

 COMMIT;

vstdate := SYSDATE;

 MERGE INTO PIBICSDM2.THAIPASSPORT DM
  USING (SELECT * 
     FROM PIBICS.THAIPASSPORT@PIBICS_PROD
     WHERE UPDATE_DATE >= TO_DATE(v_dstart,'yyyymmdd')
      AND UPDATE_DATE < TO_DATE(v_dend,'yyyymmdd')
      AND UPDATE_DATE <> CREATE_DATE) P
  ON (DM.PASSPORTNO = P.PASSPORTNO
   and DM.CITIZENID = P.CITIZENID)
 WHEN MATCHED 
 THEN 
  UPDATE SET   --   DM.CITIZENID = P.CITIZENID,
     DM.PERSONID = P.PERSONID,
     DM.PASSNO = P.PASSNO,
     DM.TFAMILYNM = P.TFAMILYNM,
     DM.TFIRSTNM = P.TFIRSTNM,
     DM.TMIDDLENM = P.TMIDDLENM,
     DM.EFAMILYNM = P.EFAMILYNM,
     DM.EFIRSTNM = P.EFIRSTNM,
     DM.EMIDDLENM = P.EMIDDLENM,
     DM.SEX = P.SEX,
     DM.NATIONCD = P.NATIONCD,
     DM.HEIGHT = P.HEIGHT,
     DM.WEIGHT = P.WEIGHT,
     DM.ADDR = P.ADDR,
     DM.DISTRICT = P.DISTRICT,
     DM.CITYCD = P.CITYCD,
     DM.STATECD = P.STATECD,
     DM.ZIPCODE = P.ZIPCODE,
     DM.TELNO = P.TELNO,
     DM.PASSPORTDTE = P.PASSPORTDTE,
     DM.PASSPORTEXPDTE = P.PASSPORTEXPDTE,
     DM.MICROROLLNO = P.MICROROLLNO,
     DM.MICROPICNO = P.MICROPICNO,
     DM.MICROPICNOL = P.MICROPICNOL,
     DM.BIRTHDTE = P.BIRTHDTE,
     DM.IMGPASS = P.IMGPASS,
     DM.BIRTHPLACE = P.BIRTHPLACE,
     DM.DOMICILE = P.DOMICILE,
     DM.PPS_SEQNO = P.PPS_SEQNO,
     DM.PASS_SEQNO = P.PASS_SEQNO,
     DM.CREATE_DATE = P.CREATE_DATE,
     DM.UPDATE_DATE = P.UPDATE_DATE,
     DM.TYPEDPASSPORT = P.TYPEDPASSPORT,
     DM.PASSPORTSTS = P.PASSPORTSTS,
     DM.TMPPASS_SEQNO = P.TMPPASS_SEQNO
 WHEN NOT MATCHED 
 THEN 
  INSERT (     DM.CITIZENID,
     DM.PERSONID,
     DM.PASSPORTNO,
     DM.PASSNO,
     DM.TFAMILYNM,
     DM.TFIRSTNM,
     DM.TMIDDLENM,
     DM.EFAMILYNM,
     DM.EFIRSTNM,
     DM.EMIDDLENM,
     DM.SEX,
     DM.NATIONCD,
     DM.HEIGHT,
     DM.WEIGHT,
     DM.ADDR,
     DM.DISTRICT,
     DM.CITYCD,
     DM.STATECD,
     DM.ZIPCODE,
     DM.TELNO,
     DM.PASSPORTDTE,
     DM.PASSPORTEXPDTE,
     DM.MICROROLLNO,
     DM.MICROPICNO,
     DM.MICROPICNOL,
     DM.BIRTHDTE,
     DM.IMGPASS,
     DM.BIRTHPLACE,
     DM.DOMICILE,
     DM.PPS_SEQNO,
     DM.PASS_SEQNO,
     DM.CREATE_DATE,
     DM.UPDATE_DATE,
     DM.TYPEDPASSPORT,
     DM.PASSPORTSTS,
     DM.TMPPASS_SEQNO) 
VALUES (     P.CITIZENID,
     P.PERSONID,
     P.PASSPORTNO,
     P.PASSNO,
     P.TFAMILYNM,
     P.TFIRSTNM,
     P.TMIDDLENM,
     P.EFAMILYNM,
     P.EFIRSTNM,
     P.EMIDDLENM,
     P.SEX,
     P.NATIONCD,
     P.HEIGHT,
     P.WEIGHT,
     P.ADDR,
     P.DISTRICT,
     P.CITYCD,
     P.STATECD,
     P.ZIPCODE,
     P.TELNO,
     P.PASSPORTDTE,
     P.PASSPORTEXPDTE,
     P.MICROROLLNO,
     P.MICROPICNO,
     P.MICROPICNOL,
     P.BIRTHDTE,
     P.IMGPASS,
     P.BIRTHPLACE,
     P.DOMICILE,
     P.PPS_SEQNO,
     P.PASS_SEQNO,
     P.CREATE_DATE,
     P.UPDATE_DATE,
     P.TYPEDPASSPORT,
     P.PASSPORTSTS,
     P.TMPPASS_SEQNO);



 var_rows := SQL%ROWCOUNT;
 veddate := SYSDATE;

--INSERT INTO IMPORT_LOG   VALUES ('THAIPASSPORT_U_M', var_rows, SYSDATE);
INSERT INTO IMPORT_LOG_DETAIL VALUES ('THAIPASSPORT_U_M', var_rows,SYSDATE,v_dstart,v_dend,vstdate,veddate);

COMMIT;


EXCEPTION
 WHEN NO_DATA_FOUND
 THEN
  NULL;
 WHEN OTHERS
 THEN
 -- Consider logging the error and then re-raise
  RAISE;
END P_THAIPASSPORT_M;
/
  GRANT EXECUTE ON "PIBICSDM2"."P_THAIPASSPORT_M" TO "APPSUP";
  GRANT EXECUTE ON "PIBICSDM2"."P_THAIPASSPORT_M" TO "BIOSAADM";
