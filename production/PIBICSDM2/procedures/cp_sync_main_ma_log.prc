CREATE OR REPLACE EDITIONABLE PROCEDURE "PIBICSDM2"."CP_SYNC_MAIN_MA_LOG" 
is
  pLOG_LEVEL      VARCHAR2(64)     := 'INFO'; 
  pLOG_CLASS      VARCHAR2(64)     := 'ClearLogSynchronize';  
  pLOG_METHOD     VARCHAR2(64)     := 'ClearLogSynchronize';
  pREMARK         VARCHAR2(4000)   := NULL; 
  pLOG_ERROR      VARCHAR2(4000)   := NULL; 
  pSTART_DATE     TIMESTAMP        := SYSTIMESTAMP; 
  pSTART_DATE_DETAIL     TIMESTAMP        := SYSTIMESTAMP; 
  pCOMMAND        VARCHAR2(4000)   := NULL;
  
  pCLEAR_LOG_DAY  INTEGER          := -50000;
  pCLEAR_LOG_TOP  INTEGER          := -50000;
  pLAST_LOG_DATE       TIMESTAMP   := SYSTIMESTAMP;
  pILAST_LOG_DATE      NUMBER      := 0;
  pLOG_ID_MIN          NUMBER      := 0;
  pLOG_ID_MAX          NUMBER      := 0;
  pLOG_ID_PROCESS      NUMBER      := 0;
  pPROCESS_BY          VARCHAR2(64):= 'AutoSystem';
  pTABLE_NAME          VARCHAR2(255) :='SYS_SYNC_LOG';
begin
  
  /* SP for Clear Log Sync*/
  SELECT    -1 * CAST(CONFIG_VALUE AS INTEGER)  INTO pCLEAR_LOG_DAY  FROM SYS_SYNC_CONFIG WHERE STATUS='Y' AND CONFIG_NAME = 'CLEAR_LOG_SYNC'; 
  SELECT    CAST(CONFIG_VALUE AS INTEGER)       INTO pCLEAR_LOG_TOP  FROM SYS_SYNC_CONFIG WHERE STATUS='Y' AND CONFIG_NAME = 'CLEAR_LOG_SYNC_TOP'; 
    
  pLAST_LOG_DATE  := CAST(pLAST_LOG_DATE AS DATE) + pCLEAR_LOG_DAY;
  pILAST_LOG_DATE := TO_NUMBER(TO_CHAR(CAST(pLAST_LOG_DATE AS DATE), 'YYYYMMDD'));
  
  SELECT MIN(ID), MAX(ID) INTO pLOG_ID_MIN, pLOG_ID_MAX FROM SYS_SYNC_LOG WHERE ISTART_DATE < pILAST_LOG_DATE;
  
  IF pLOG_ID_MIN > 0 AND pLOG_ID_MAX > 0
    THEN
  
      pLOG_METHOD        := 'ClearLogDetail';
      pLOG_ID_PROCESS    := pLOG_ID_MIN;
      
      BEGIN
        
          WHILE pLOG_ID_PROCESS < pLOG_ID_MAX LOOP
            
            pLOG_ID_PROCESS    := pLOG_ID_PROCESS + pCLEAR_LOG_TOP;
            
            -- 1. Clear Temp Table
            pSTART_DATE_DETAIL := SYSTIMESTAMP;
            pCOMMAND := 'TRUNCATE TABLE SYS_SYNC_LOG_ARCHIVE_TEMP';
            EXECUTE IMMEDIATE pCOMMAND; 
            CP_SYNC_INSERT_LOG(pTABLE_NAME, pLOG_LEVEL, pLOG_CLASS, pLOG_METHOD, pREMARK, pLOG_ERROR, pSTART_DATE_DETAIL, pCOMMAND, pPROCESS_BY); 
    
    
            -- 2. Insert Data to Temp Table
            pSTART_DATE_DETAIL := SYSTIMESTAMP;
            pCOMMAND := 'INSERT INTO SYS_SYNC_LOG_ARCHIVE_TEMP(ID,LOG_LEVEL,LOG_CLASS,LOG_METHOD,REMARK,ERROR_MSG,START_DATETIME,END_DATETIME,PROCESSING_TIME,TABLE_NAME,QUERY_COMMAND,ISTART_DATE,IEND_DATE,PROCESS_BY)
                        SELECT ID,LOG_LEVEL,LOG_CLASS,LOG_METHOD,REMARK,ERROR_MSG,START_DATETIME,END_DATETIME,PROCESSING_TIME,TABLE_NAME,QUERY_COMMAND,ISTART_DATE,IEND_DATE,PROCESS_BY
                        FROM SYS_SYNC_LOG
                        WHERE ID >= ' || pLOG_ID_MIN || ' AND ID <= ' || pLOG_ID_PROCESS || ' AND ID <= ' || pLOG_ID_MAX ;
            EXECUTE IMMEDIATE pCOMMAND; 
            CP_SYNC_INSERT_LOG(pTABLE_NAME, pLOG_LEVEL, pLOG_CLASS, pLOG_METHOD, pREMARK, pLOG_ERROR, pSTART_DATE_DETAIL, pCOMMAND, pPROCESS_BY); 
    
            
            -- 3. Delete Data Duplicate Temp vs Archive
             pSTART_DATE_DETAIL := SYSTIMESTAMP;
            pCOMMAND := 'DELETE FROM SYS_SYNC_LOG_ARCHIVE WHERE ID >= ' || pLOG_ID_MIN || ' AND ID IN
                          (
                            SELECT ID FROM SYS_SYNC_LOG_ARCHIVE_TEMP
                          )';
            EXECUTE IMMEDIATE pCOMMAND; 
            CP_SYNC_INSERT_LOG(pTABLE_NAME, pLOG_LEVEL, pLOG_CLASS, pLOG_METHOD, pREMARK, pLOG_ERROR, pSTART_DATE_DETAIL, pCOMMAND, pPROCESS_BY); 
    
            
            -- 4. Insert Data to Archive Table
            pSTART_DATE_DETAIL := SYSTIMESTAMP;
            pCOMMAND := 'INSERT INTO SYS_SYNC_LOG_ARCHIVE(ID,LOG_LEVEL,LOG_CLASS,LOG_METHOD,REMARK,ERROR_MSG,START_DATETIME,END_DATETIME,PROCESSING_TIME,TABLE_NAME,QUERY_COMMAND,ISTART_DATE,IEND_DATE,PROCESS_BY)
                        SELECT ID,LOG_LEVEL,LOG_CLASS,LOG_METHOD,REMARK,ERROR_MSG,START_DATETIME,END_DATETIME,PROCESSING_TIME,TABLE_NAME,QUERY_COMMAND,ISTART_DATE,IEND_DATE,PROCESS_BY
                        FROM SYS_SYNC_LOG_ARCHIVE_TEMP';
            EXECUTE IMMEDIATE pCOMMAND; 
            CP_SYNC_INSERT_LOG(pTABLE_NAME, pLOG_LEVEL, pLOG_CLASS, pLOG_METHOD, pREMARK, pLOG_ERROR, pSTART_DATE_DETAIL, pCOMMAND, pPROCESS_BY); 
    
            
            -- 5. Delete Log Sync (Source Original
            pSTART_DATE_DETAIL := SYSTIMESTAMP;
            pCOMMAND           := 'DELETE FROM SYS_SYNC_LOG WHERE ID >= ' || pLOG_ID_MIN || ' AND ID IN
                                    (
                                      SELECT ID FROM SYS_SYNC_LOG_ARCHIVE_TEMP
                                    )';
            EXECUTE IMMEDIATE pCOMMAND; 
            CP_SYNC_INSERT_LOG(pTABLE_NAME, pLOG_LEVEL, pLOG_CLASS, pLOG_METHOD, pREMARK, pLOG_ERROR, pSTART_DATE_DETAIL, pCOMMAND, pPROCESS_BY); 
    
          END LOOP;
        
      EXCEPTION           
       WHEN OTHERS THEN
         DBMS_OUTPUT.PUT_LINE(SQLERRM);
         pLOG_LEVEL      := 'ERROR';
         pLOG_ERROR      := SQLERRM;
      END;  
      
  END IF;
  
               
  -------- Keep Log   
  pLOG_METHOD  := 'AllClearLogSynchronize';  
  pREMARK := 'Date for Clear Log <: ' || pILAST_LOG_DATE
             || ', LogId Min: ' || pLOG_ID_MIN
             || ', LogId Max: ' || pLOG_ID_MAX;
  IF pLOG_LEVEL <> 'ERROR'
    THEN
      pCOMMAND  := NULL;
  END IF;       
  
  CP_SYNC_INSERT_LOG(pTABLE_NAME, pLOG_LEVEL, pLOG_CLASS, pLOG_METHOD, pREMARK, pLOG_ERROR, pSTART_DATE, pCOMMAND, pPROCESS_BY); 
     
  
end CP_SYNC_MAIN_MA_LOG;
/
