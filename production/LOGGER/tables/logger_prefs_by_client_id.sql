CREATE TABLE "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" 
   (	"CLIENT_ID" VARCHAR2(64) NOT NULL ENABLE, 
	"LOGGER_LEVEL" VARCHAR2(20) NOT NULL ENABLE, 
	"INCLUDE_CALL_STACK" VARCHAR2(5) NOT NULL ENABLE, 
	"CREATED_DATE" DATE DEFAULT sysdate NOT NULL ENABLE, 
	"EXPIRY_DATE" DATE NOT NULL ENABLE
   ) ;
  ALTER TABLE "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" ADD CONSTRAINT "LOGGER_PREFS_BY_CLIENT_ID_CK2" CHECK (expiry_date >= created_date) ENABLE;
  ALTER TABLE "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" ADD CONSTRAINT "LOGGER_PREFS_BY_CLIENT_ID_CK3" CHECK (include_call_stack in ('TRUE', 'FALSE')) ENABLE;
  ALTER TABLE "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" ADD CONSTRAINT "LOGGER_PREFS_BY_CLIENT_ID_PK" PRIMARY KEY ("CLIENT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" ADD CONSTRAINT "LOGGER_PREFS_BY_CLIENT_ID_CK1" CHECK (logger_level in ('OFF','PERMANENT','ERROR','WARNING','INFORMATION','DEBUG','TIMING', 'APEX', 'SYS_CONTEXT')) ENABLE;
   COMMENT ON COLUMN "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID"."CLIENT_ID" IS 'Client identifier';
   COMMENT ON COLUMN "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID"."LOGGER_LEVEL" IS 'Logger level. Must be OFF, PERMANENT, ERROR, WARNING, INFORMATION, DEBUG, TIMING';
   COMMENT ON COLUMN "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID"."INCLUDE_CALL_STACK" IS 'Include call stack in logging';
   COMMENT ON COLUMN "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID"."CREATED_DATE" IS 'Date that entry was created on';
   COMMENT ON COLUMN "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID"."EXPIRY_DATE" IS 'After the given expiry date the logger_level will be disabled for the specific client_id. Unless sepcifically removed from this table a job will clean up old entries';
   COMMENT ON TABLE "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID"  IS 'Client specific logger levels. Only active client_ids/logger_levels will be maintained in this table';
  CREATE UNIQUE INDEX "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID_PK" ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" ("CLIENT_ID") 
  ;
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_STAGING4PIBICS_INTF";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_INTERFACE";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_DBA";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_COMMON";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_USER_MANAGEMENT";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "USER_MANAGEMENT";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_BORDERCONTROL";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_BLACKLIST";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_BORDERCONTROL_DATAMART";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DL_STAGING4PIBICS";
  GRANT DELETE ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DERMALOG_PROXY";
  GRANT INSERT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DERMALOG_PROXY";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DERMALOG_PROXY";
  GRANT UPDATE ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "DERMALOG_PROXY";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "APPSUP";
  GRANT ALTER ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT DELETE ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT INDEX ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT INSERT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT SELECT ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT UPDATE ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT REFERENCES ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT READ ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT ON COMMIT REFRESH ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT QUERY REWRITE ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT DEBUG ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
  GRANT FLASHBACK ON "LOGGER"."LOGGER_PREFS_BY_CLIENT_ID" TO "BIOSAADM";
