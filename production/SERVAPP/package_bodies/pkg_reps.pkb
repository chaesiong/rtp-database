CREATE OR REPLACE EDITIONABLE PACKAGE BODY "SERVAPP"."PKG_REPS" AS

  PROCEDURE SP_TM8(
      P_DATA IN BLOB,
      P_RESPONSE OUT CLOB ) AS
      
  REQ BLOB;
RES CLOB;

SAVE_IP_CLIENT_VAL VARCHAR2(15);
SAVE_USER_VAL VARCHAR2(20);
SAVE_DATE_VAL TIMESTAMP(6);
SYSTEM_CODE_VAL VARCHAR2(20);
MODULE_VAL VARCHAR2(20);

SLIPTYPE_VAL CHAR(1);
MAXSLIPNO_VAL VARCHAR2(10);
MAXSLIPBOOKNO_VAL VARCHAR2(10);
APPROVE_BY_VAL VARCHAR2(20);
PRINTFLAG_VAL CHAR(1);

DEPT_SEQNO_VAL NUMBER;
TM8_SEQNO_VAL DECIMAL(18,2);

ACTFLAG_VAL VARCHAR2(1);
DOCNO_VAL NUMBER;
FEES_SEQNO_VAL DECIMAL(18,2);
FEES_SEQNO_MAIN_VAL DECIMAL(18,2);
CP_SEQNO_VAL DECIMAL(18,2);
FIXTEXT_VAL VARCHAR2(5);

FEESLIPTOTAL_VAL NUMBER(10,2);
FLAG_SYSTEM_VAL VARCHAR(10);

FEESNO_VAL NUMBER;
FEESLIPNO_VAL VARCHAR(20);
FEESLIPBOOKNO_VAL VARCHAR2(20);

PRATE_SEQNO_VAL NUMBER;

FEE_STS_VAL CHAR(1);

ZONE_SEQNO_VAL NUMBER;
TM8NO_VAL NUMBER;
TM8RUNNING_SEQNO_VAL NUMBER;

YEAR_VAL NUMBER;
ZONE_VAL VARCHAR2(12);
NUMBER_OF_PERSON_VAL NUMBER;

REPSPERSON_SEQNO_VAL NUMBER;
TM8CHILD_SEQNO_VAL NUMBER;
DOCTYPE_VAL VARCHAR(1);
CONFIG_PRATE_NAME VARCHAR(100);
EX_CUSTOM EXCEPTION;
PRAGMA EXCEPTION_INIT( EX_CUSTOM, -20001 );
ERROR_CODE VARCHAR2(10);
ERROR_MESSAGE VARCHAR2(500);
DATA_FOUND NUMBER;

REQ_DATA     JSON;
PERSONS_DATA      JSON_LIST;
PERSON_DATA    JSON;
RECORD_DATA JSON;
IMG_PERSON_VAL BLOB;
IMGINOUT_VAL BLOB;
C_IMG_PERSON_VAL CLOB;
C_IMGINOUT_VAL CLOB;
i_count number;
i_prate_seqno int;
v_slipno varchar2(200);
v_slipbookno varchar2(200);
i_mainfee_seqno int;
i_old_fee_seqno int;
v_mode VARCHAR2(200);
v_zone_seqno VARCHAR2(20);
v_update_seqno VARCHAR2(20);
i_suffix_seqno int;
  BEGIN
       REQ := P_DATA;
       v_update_seqno := 'N';
       i_old_fee_seqno := 0;
--GET PRATE FROM DOCTYPE       
         SELECT d.DOCTYPE INTO DOCTYPE_VAL
         FROM json_table(REQ  FORMAT JSON, '$'
         COLUMNS (		
            DOCTYPE     VARCHAR2  	PATH '$.recordInfo.DOCTYPE'
                 )) d;

        IF DOCTYPE_VAL = 'M' THEN
        CONFIG_PRATE_NAME := 'PRATE_SEQNO_REPS_MULTIPLE';
        ELSIF DOCTYPE_VAL = 'S' THEN
        CONFIG_PRATE_NAME := 'PRATE_SEQNO_REPS';          
        END IF;

select count(1)
   into i_prate_seqno
   from MSCS_SYS_CONFIG
   where CONFIG_NAME = CONFIG_PRATE_NAME;

 if i_prate_seqno >0 then
 select to_number(CONFIG_VALUE)
   into i_prate_seqno
   from MSCS_SYS_CONFIG
   where CONFIG_NAME = CONFIG_PRATE_NAME;
   
    SELECT i.SAVE_IP_CLIENT,i.SAVE_USER,CURRENT_TIMESTAMP,i.SYSTEM_CODE,i.MODULE,i.DEPT_SEQNO,i.TM8_SEQNO,i.YEAR,i.SLIPTYPE,i.FEE_STS,i.FEESLIPNO,i.FEESLIPBOOKNO,TM8NO
    ,zone_seqno,suffix_seqno
	INTO SAVE_IP_CLIENT_VAL,SAVE_USER_VAL,SAVE_DATE_VAL,SYSTEM_CODE_VAL,MODULE_VAL,DEPT_SEQNO_VAL,TM8_SEQNO_VAL,YEAR_VAL,SLIPTYPE_VAL,FEE_STS_VAL,FEESLIPNO_VAL,FEESLIPBOOKNO_VAL,TM8NO_VAL
    ,v_zone_seqno,i_suffix_seqno
    FROM json_table(REQ  FORMAT JSON, '$'
         COLUMNS (
			SAVE_IP_CLIENT      VARCHAR2  	PATH '$.headerInfo.ipClient',
			SAVE_USER        	VARCHAR2  	PATH '$.headerInfo.userId',
			SYSTEM_CODE 		VARCHAR2   	PATH '$.headerInfo.systemCode',
		    MODULE 				VARCHAR2    PATH '$.headerInfo.module',
			DEPT_SEQNO   		NUMBER  	PATH '$.recordInfo.DEPT_SEQNO',
			TM8_SEQNO   		NUMBER  	PATH '$.recordInfo.TM8_SEQNO',
            YEAR   		        NUMBER  	PATH '$.recordInfo.YEAR',
            --ZONE                VARCHAR2  	PATH '$.recordInfo.ZONE',
			SLIPTYPE            VARCHAR2  	PATH '$.recordInfo.SLIPTYPE',
            FEE_STS             VARCHAR2  	PATH '$.recordInfo.FEE_STS',
            FEESLIPNO           VARCHAR2  	PATH '$.recordInfo.FEESLIPNO',
            FEESLIPBOOKNO       VARCHAR2  	PATH '$.recordInfo.FEESLIPBOOKNO',
            TM8NO               VARCHAR2  	PATH '$.recordInfo.TM8NO',
            zone_seqno        VARCHAR2  	PATH '$.headerInfo.zone_seqno',
            suffix_seqno    number PATH '$.recordInfo.SUFFIX_SEQNO'
        )) i;
   YEAR_VAL := trim(YEAR_VAL);     
if length(YEAR_VAL)<4 or YEAR_VAL is null then
  YEAR_VAL := to_char((to_number(to_char(sysdate,'yyyy'))+543));
end if;


IF(TM8_SEQNO_VAL IS NULL) THEN
    v_mode := 'I';
    SELECT TM8_SEQNO.NEXTVAL INTO TM8_SEQNO_VAL FROM DUAL;


    IF(TM8NO_VAL IS NULL) THEN 
    v_update_seqno :='Y';
    begin
     if v_zone_seqno is null then
     SELECT b.ZONE,b.TM8NO,b.TM8RUNNING_SEQNO INTO ZONE_VAL,TM8NO_VAL,TM8RUNNING_SEQNO_VAL
     FROM MSCS_REPS_TM8RUNNING b
     where b.DEPT_SEQNO = DEPT_SEQNO_VAL
           AND ROWNUM =1;   
    else
     SELECT b.ZONE,b.TM8NO,b.TM8RUNNING_SEQNO INTO ZONE_VAL,TM8NO_VAL,TM8RUNNING_SEQNO_VAL
     FROM  MSCS_REPS_TM8RUNNING b 
     where b.zone = v_zone_seqno 
           AND b.DEPT_SEQNO = DEPT_SEQNO_VAL
           AND ROWNUM =1;
    end if;
    exception   
    when no_data_found then
    ERROR_CODE := 'E0007';
    RAISE_APPLICATION_ERROR(-20000, 'SYSERROR-E0007');
     end;

   /* UPDATE MSCS_REPS_TM8RUNNING
    SET TM8NO=TM8NO_VAL+1,
        update_date =sysdate,
        update_by =SAVE_USER_VAL
    WHERE TM8RUNNING_SEQNO = TM8RUNNING_SEQNO_VAL;*/
    --SELECT TM8NO INTO TM8NO_VAL FROM MSCS_REPS_TM8RUNNING WHERE YEAR=YEAR_VAL AND ZONE=ZONE_VAL AND ROWNUM =1;

	--UPDATE MSCS_REPS_TM8RUNNING SET TM8NO=TM8NO_VAL+1 WHERE YEAR=YEAR_VAL AND ZONE=ZONE_VAL;

    END IF;

    SELECT REPSPERSON_SEQNO.NEXTVAL INTO REPSPERSON_SEQNO_VAL FROM DUAL;    

ELSE 
    v_mode := 'U';
    select FEES_SEQNO into FEES_SEQNO_VAL from mscs_reps_tm8 where TM8_SEQNO =TM8_SEQNO_VAL;
    SELECT REPSPERSON_SEQNO,FEES_SEQNO INTO REPSPERSON_SEQNO_VAL,i_old_fee_seqno FROM MSCS_REPS_TM8 WHERE TM8_SEQNO=TM8_SEQNO_VAL;  

    begin
    ZONE_VAL := v_zone_seqno;
    exception   
    when no_data_found then
    ERROR_CODE := 'E0007';
    RAISE_APPLICATION_ERROR(-20000, 'SYSERROR-E0007');
     end;
END IF;

MERGE INTO MSCS_REPS_TM8 d
USING 
(SELECT 
            TM8_SEQNO_VAL TM8_SEQNO
			,TM8NO_VAL TM8NO
			,YEAR_VAL as year--e.YEAR
			,e.FEES_SEQNO
			,e.WRITTEN
			,e.PERSONID
			,UPPER(e.FAMILYNM) FAMILYNM
			,UPPER(e.FIRSTNM) FIRSTNM
			,UPPER(e.MIDDLENM) MIDDLENM
			,e.NATIONAL_SEQNO
			,e.BIRTH_DATE
			,e.SEX
			,e.AGE
			,e.OCC_SEQNO
			,e.BIRTH_PLACE
			,e.BIRTHCOUNT_SEQNO
			,e.PASSPORTNO
			,TO_DATE(e.PASSPORT_DATE, 'DD/MM/YYYY') PASSPORT_DATE
			,TO_DATE(e.PASSPORTEXP_DATE, 'DD/MM/YYYY') PASSPORTEXP_DATE
			,e.PASSPORTISSUEBY
			,e.CHILDNO
			,e.ADDR
			,e.ROAD
			,e.TMB_SEQNO
			,e.AMP_SEQNO
			,e.PV_SEQNO
			,e.VISANO
			,e.TDT_SEQNO
			,e.VISAISSUE
			,TO_DATE(e.VISA_DATE, 'DD/MM/YYYY') VISA_DATE
			,e.OPERMIT_SEQNO
			,TO_DATE(e.ARRIVE_DATE, 'DD/MM/YYYY') ARRIVE_DATE
			,TO_DATE(e.OPERMIT_DATE, 'DD/MM/YYYY') OPERMIT_DATE
			,e.DOCTYPE
			,e.PURPOSECOUNT_SEQNO
			,e.CONV_SEQNO
			,TO_DATE(e.LEAVE_DATE, 'DD/MM/YYYY') LEAVE_DATE
			,TO_DATE(e.RETURN_DATE, 'DD/MM/YYYY') RETURN_DATE
			,e.PURPOSE
			,e.APPVSTS
			,TO_DATE(e.DOC_DATE, 'DD/MM/YYYY') DOC_DATE
			,e.DEPT_SEQNO
			,e.PERMIT_STATUS
			,TO_DATE(e.NEWPERMIT_DATE, 'DD/MM/YYYY') NEWPERMIT_DATE
			,e.REASON_SEQNO
			,e.REASONDESC
			,e.TM6_SEQNO
			,TO_DATE(e.ENDPERMIT_DATE, 'DD/MM/YYYY') ENDPERMIT_DATE
			,SAVE_DATE_VAL CREATE_DATE
            ,SAVE_USER_VAL CREATE_BY
			,SAVE_DATE_VAL UPDATE_DATE
			,SAVE_USER_VAL UPDATE_BY
			,1 VERSION
			,e.OVISATYPE_SEQNO
			,TO_DATE(e.TODAY_DATE, 'DD/MM/YYYY') TODAY_DATE
			,NULL IMGINOUT
			,e.TM6NO
			,TO_DATE(e.APPVSTSBYDATE, 'DD/MM/YYYY') APPVSTSBYDATE
			,e.APPVSTSBYDEPT_SEQNO
			,e.FLAG_BOI
			,e.IPADDRESS
			,e.UIPADDRESS
			,e.T_IDICONCEPT
			,e.ZONE_SEQNO
			,e.SUFFIX_SEQNO
			,e.EXTLIST_SEQNO
			,e.MANUALTM8
			,REPSPERSON_SEQNO_VAL REPSPERSON_SEQNO
			,e.TELEPHONE
			,NULL IMG_PERSON
			,e.FLAG_QUEONLINE
			,e.PD_SEQNO
    FROM json_table(REQ  FORMAT JSON, '$'
         COLUMNS (
			--YEAR  VARCHAR2 PATH '$.recordInfo.YEAR',
			FEES_SEQNO  VARCHAR2 PATH '$.recordInfo.FEES_SEQNO',
			WRITTEN  VARCHAR2 PATH '$.recordInfo.WRITTEN',
			PERSONID  VARCHAR2 PATH '$.recordInfo.PERSONID',
			FAMILYNM  VARCHAR2 PATH '$.recordInfo.FAMILYNM',
			FIRSTNM  VARCHAR2 PATH '$.recordInfo.FIRSTNM',
			MIDDLENM  VARCHAR2 PATH '$.recordInfo.MIDDLENM',
			NATIONAL_SEQNO  VARCHAR2 PATH '$.recordInfo.NATIONAL_SEQNO',
			BIRTH_DATE  VARCHAR2 PATH '$.recordInfo.BIRTH_DATE',
			SEX  VARCHAR2 PATH '$.recordInfo.SEX',
			AGE  VARCHAR2 PATH '$.recordInfo.AGE',
			OCC_SEQNO  VARCHAR2 PATH '$.recordInfo.OCC_SEQNO',
			BIRTH_PLACE  VARCHAR2 PATH '$.recordInfo.BIRTH_PLACE',
			BIRTHCOUNT_SEQNO  VARCHAR2 PATH '$.recordInfo.BIRTHCOUNT_SEQNO',
			PASSPORTNO  VARCHAR2 PATH '$.recordInfo.PASSPORTNO',
			PASSPORT_DATE  VARCHAR2 PATH '$.recordInfo.PASSPORT_DATE',
			PASSPORTEXP_DATE  VARCHAR2 PATH '$.recordInfo.PASSPORTEXP_DATE',
			PASSPORTISSUEBY  VARCHAR2 PATH '$.recordInfo.PASSPORTISSUEBY',
			CHILDNO  VARCHAR2 PATH '$.recordInfo.CHILDNO',
			ADDR  VARCHAR2 PATH '$.recordInfo.ADDR',
			ROAD  VARCHAR2 PATH '$.recordInfo.ROAD',
			TMB_SEQNO  VARCHAR2 PATH '$.recordInfo.TMB_SEQNO',
			AMP_SEQNO  VARCHAR2 PATH '$.recordInfo.AMP_SEQNO',
			PV_SEQNO  VARCHAR2 PATH '$.recordInfo.PV_SEQNO',
			VISANO  VARCHAR2 PATH '$.recordInfo.VISANO',
			TDT_SEQNO  VARCHAR2 PATH '$.recordInfo.TDT_SEQNO',
			VISAISSUE  VARCHAR2 PATH '$.recordInfo.VISAISSUE',
			VISA_DATE  VARCHAR2 PATH '$.recordInfo.VISA_DATE',
			OPERMIT_SEQNO  VARCHAR2 PATH '$.recordInfo.OPERMIT_SEQNO',
			ARRIVE_DATE  VARCHAR2 PATH '$.recordInfo.ARRIVE_DATE',
			OPERMIT_DATE  VARCHAR2 PATH '$.recordInfo.OPERMIT_DATE',
			DOCTYPE  VARCHAR2 PATH '$.recordInfo.DOCTYPE',
			PURPOSECOUNT_SEQNO  VARCHAR2 PATH '$.recordInfo.PURPOSECOUNT_SEQNO',
			CONV_SEQNO  VARCHAR2 PATH '$.recordInfo.CONV_SEQNO',
			LEAVE_DATE  VARCHAR2 PATH '$.recordInfo.LEAVE_DATE',
			RETURN_DATE  VARCHAR2 PATH '$.recordInfo.RETURN_DATE',
			PURPOSE  VARCHAR2 PATH '$.recordInfo.PURPOSE',
			APPVSTS  VARCHAR2 PATH '$.recordInfo.APPVSTS',
			DOC_DATE  VARCHAR2 PATH '$.recordInfo.DOC_DATE',
			DEPT_SEQNO  VARCHAR2 PATH '$.recordInfo.DEPT_SEQNO',
			PERMIT_STATUS  VARCHAR2 PATH '$.recordInfo.PERMIT_STATUS',
			NEWPERMIT_DATE  VARCHAR2 PATH '$.recordInfo.NEWPERMIT_DATE',
			REASON_SEQNO  VARCHAR2 PATH '$.recordInfo.REASON_SEQNO',
			REASONDESC  VARCHAR2 PATH '$.recordInfo.REASONDESC',
			TM6_SEQNO  VARCHAR2 PATH '$.recordInfo.TM6_SEQNO',
			ENDPERMIT_DATE  VARCHAR2 PATH '$.recordInfo.ENDPERMIT_DATE',
			OVISATYPE_SEQNO  VARCHAR2 PATH '$.recordInfo.OVISATYPE_SEQNO',
			TODAY_DATE  VARCHAR2 PATH '$.recordInfo.TODAY_DATE',
			TM6NO  VARCHAR2 PATH '$.recordInfo.TM6NO',
			APPVSTSBYDATE  VARCHAR2 PATH '$.recordInfo.APPVSTSBYDATE',
			APPVSTSBYDEPT_SEQNO  VARCHAR2 PATH '$.recordInfo.APPVSTSBYDEPT_SEQNO',
			FLAG_BOI  VARCHAR2 PATH '$.recordInfo.FLAG_BOI',
			IPADDRESS  VARCHAR2 PATH '$.recordInfo.IPADDRESS',
			UIPADDRESS  VARCHAR2 PATH '$.recordInfo.UIPADDRESS',
			T_IDICONCEPT  VARCHAR2 PATH '$.recordInfo.T_IDICONCEPT',
			ZONE_SEQNO  VARCHAR2 PATH '$.recordInfo.ZONE_SEQNO',
			SUFFIX_SEQNO  VARCHAR2 PATH '$.recordInfo.SUFFIX_SEQNO',
			EXTLIST_SEQNO  VARCHAR2 PATH '$.recordInfo.EXTLIST_SEQNO',
			MANUALTM8  VARCHAR2 PATH '$.recordInfo.MANUALTM8',
			REPSPERSON_SEQNO  VARCHAR2 PATH '$.recordInfo.REPSPERSON_SEQNO',
			TELEPHONE  VARCHAR2 PATH '$.recordInfo.TELEPHONE',
			--IMG_PERSON  VARCHAR2 PATH '$.recordInfo.IMG_PERSON',
			FLAG_QUEONLINE  VARCHAR2 PATH '$.recordInfo.FLAG_QUEONLINE',
			PD_SEQNO  VARCHAR2 PATH '$.recordInfo.PD_SEQNO'
    )) e) s
    ON (d.TM8_SEQNO=s.TM8_SEQNO)
    WHEN MATCHED THEN
    UPDATE SET
            d.YEAR=s.YEAR
            ,d.FEES_SEQNO=s.FEES_SEQNO
            ,d.WRITTEN=s.WRITTEN
            ,d.PERSONID=s.PERSONID
            ,d.FAMILYNM=s.FAMILYNM
            ,d.FIRSTNM=s.FIRSTNM
            ,d.MIDDLENM=s.MIDDLENM
            ,d.NATIONAL_SEQNO=s.NATIONAL_SEQNO
            ,d.BIRTH_DATE=s.BIRTH_DATE
            ,d.SEX=s.SEX
            ,d.AGE=s.AGE
            ,d.OCC_SEQNO=s.OCC_SEQNO
            ,d.BIRTH_PLACE=s.BIRTH_PLACE
            ,d.BIRTHCOUNT_SEQNO=s.BIRTHCOUNT_SEQNO
            ,d.PASSPORTNO=s.PASSPORTNO
            ,d.PASSPORT_DATE=s.PASSPORT_DATE
            ,d.PASSPORTEXP_DATE=s.PASSPORTEXP_DATE
            ,d.PASSPORTISSUEBY=s.PASSPORTISSUEBY
            ,d.CHILDNO=s.CHILDNO
            ,d.ADDR=s.ADDR
            ,d.ROAD=s.ROAD
            ,d.TMB_SEQNO=s.TMB_SEQNO
            ,d.AMP_SEQNO=s.AMP_SEQNO
            ,d.PV_SEQNO=s.PV_SEQNO
            ,d.VISANO=s.VISANO
            ,d.TDT_SEQNO=s.TDT_SEQNO
            ,d.VISAISSUE=s.VISAISSUE
            ,d.VISA_DATE=s.VISA_DATE
            ,d.OPERMIT_SEQNO=s.OPERMIT_SEQNO
            ,d.ARRIVE_DATE=s.ARRIVE_DATE
            ,d.OPERMIT_DATE=s.OPERMIT_DATE
            ,d.DOCTYPE=s.DOCTYPE
            ,d.PURPOSECOUNT_SEQNO=s.PURPOSECOUNT_SEQNO
            ,d.CONV_SEQNO=s.CONV_SEQNO
            ,d.LEAVE_DATE=s.LEAVE_DATE
            ,d.RETURN_DATE=s.RETURN_DATE
            ,d.PURPOSE=s.PURPOSE
            ,d.APPVSTS=s.APPVSTS
            ,d.DOC_DATE=s.DOC_DATE
            ,d.DEPT_SEQNO=s.DEPT_SEQNO
            ,d.PERMIT_STATUS=s.PERMIT_STATUS
            ,d.NEWPERMIT_DATE=s.NEWPERMIT_DATE
            ,d.REASON_SEQNO=s.REASON_SEQNO
            ,d.REASONDESC=s.REASONDESC
            ,d.TM6_SEQNO=s.TM6_SEQNO
            ,d.ENDPERMIT_DATE=s.ENDPERMIT_DATE
            ,d.UPDATE_DATE=sysdate
            ,d.UPDATE_BY=s.UPDATE_BY
            ,d.VERSION=s.VERSION
            ,d.OVISATYPE_SEQNO=s.OVISATYPE_SEQNO
            ,d.TODAY_DATE=s.TODAY_DATE
            ,d.TM6NO=s.TM6NO
            ,d.APPVSTSBYDATE=s.APPVSTSBYDATE
            ,d.APPVSTSBYDEPT_SEQNO=s.APPVSTSBYDEPT_SEQNO
            ,d.FLAG_BOI=s.FLAG_BOI
            ,d.IPADDRESS=s.IPADDRESS
            ,d.UIPADDRESS=s.UIPADDRESS
            ,d.T_IDICONCEPT=s.T_IDICONCEPT
            --,d.ZONE_SEQNO=s.ZONE_SEQNO
            ,d.ZONE_SEQNO=ZONE_VAL
            ,d.SUFFIX_SEQNO=s.SUFFIX_SEQNO
            ,d.EXTLIST_SEQNO=s.EXTLIST_SEQNO
            ,d.MANUALTM8=s.MANUALTM8
            ,d.TELEPHONE=s.TELEPHONE
            ,d.FLAG_QUEONLINE=s.FLAG_QUEONLINE
            ,d.PD_SEQNO=s.PD_SEQNO
            ,d.TM8NO =s.TM8NO
WHEN NOT MATCHED THEN
INSERT (
            TM8_SEQNO
			,TM8NO
			,YEAR
			,FEES_SEQNO
			,WRITTEN
			,PERSONID
			,FAMILYNM
			,FIRSTNM
			,MIDDLENM
			,NATIONAL_SEQNO
			,BIRTH_DATE
			,SEX
			,AGE
			,OCC_SEQNO
			,BIRTH_PLACE
			,BIRTHCOUNT_SEQNO
			,PASSPORTNO
			,PASSPORT_DATE
			,PASSPORTEXP_DATE
			,PASSPORTISSUEBY
			,CHILDNO
			,ADDR
			,ROAD
			,TMB_SEQNO
			,AMP_SEQNO
			,PV_SEQNO
			,VISANO
			,TDT_SEQNO
			,VISAISSUE
			,VISA_DATE
			,OPERMIT_SEQNO
			,ARRIVE_DATE
			,OPERMIT_DATE
			,DOCTYPE
			,PURPOSECOUNT_SEQNO
			,CONV_SEQNO
			,LEAVE_DATE
			,RETURN_DATE
			,PURPOSE
			,APPVSTS
			,DOC_DATE
			,DEPT_SEQNO
			,PERMIT_STATUS
			,NEWPERMIT_DATE
			,REASON_SEQNO
			,REASONDESC
			,TM6_SEQNO
			,ENDPERMIT_DATE
			,CREATE_DATE
			,CREATE_BY
			,UPDATE_DATE
			,UPDATE_BY
			,VERSION
			,OVISATYPE_SEQNO
			,TODAY_DATE
			,IMGINOUT
			,TM6NO
			,APPVSTSBYDATE
			,APPVSTSBYDEPT_SEQNO
			,FLAG_BOI
			,IPADDRESS
			,UIPADDRESS
			,T_IDICONCEPT
			,ZONE_SEQNO
			,SUFFIX_SEQNO
			,EXTLIST_SEQNO
			,MANUALTM8
			,REPSPERSON_SEQNO
			,TELEPHONE
			,IMG_PERSON
			,FLAG_QUEONLINE
			,PD_SEQNO
            )
    VALUES(
            TM8_SEQNO_VAL
            ,TM8NO_VAL
            ,s.YEAR
            ,s.FEES_SEQNO
            ,s.WRITTEN
            ,s.PERSONID
            ,nvl(s.FAMILYNM,'-')
            ,s.FIRSTNM
            ,s.MIDDLENM
            ,s.NATIONAL_SEQNO
            ,s.BIRTH_DATE
            ,s.SEX
            ,s.AGE
            ,s.OCC_SEQNO
            ,s.BIRTH_PLACE
            ,s.BIRTHCOUNT_SEQNO
            ,s.PASSPORTNO
            ,s.PASSPORT_DATE
            ,s.PASSPORTEXP_DATE
            ,s.PASSPORTISSUEBY
            ,s.CHILDNO
            ,s.ADDR
            ,s.ROAD
            ,s.TMB_SEQNO
            ,s.AMP_SEQNO
            ,s.PV_SEQNO
            ,s.VISANO
            ,s.TDT_SEQNO
            ,s.VISAISSUE
            ,s.VISA_DATE
            ,s.OPERMIT_SEQNO
            ,s.ARRIVE_DATE
            ,s.OPERMIT_DATE
            ,s.DOCTYPE
            ,s.PURPOSECOUNT_SEQNO
            ,s.CONV_SEQNO
            ,s.LEAVE_DATE
            ,s.RETURN_DATE
            ,s.PURPOSE
            ,s.APPVSTS
            ,s.DOC_DATE
            ,s.DEPT_SEQNO
            ,s.PERMIT_STATUS
            ,s.NEWPERMIT_DATE
            ,s.REASON_SEQNO
            ,s.REASONDESC
            ,s.TM6_SEQNO
            ,nvl(s.ENDPERMIT_DATE,s.NEWPERMIT_DATE)
            ,s.CREATE_DATE
            ,s.CREATE_BY
            ,s.UPDATE_DATE
            ,s.UPDATE_BY
            ,s.VERSION
            ,s.OVISATYPE_SEQNO
            ,s.TODAY_DATE
            ,s.IMGINOUT
            ,s.TM6NO
            ,s.APPVSTSBYDATE
            ,s.APPVSTSBYDEPT_SEQNO
            ,s.FLAG_BOI
            ,s.IPADDRESS
            ,s.UIPADDRESS
            ,s.T_IDICONCEPT
            ,ZONE_VAL--s.ZONE_SEQNO
            ,s.SUFFIX_SEQNO
            ,s.EXTLIST_SEQNO
            ,s.MANUALTM8
            ,s.REPSPERSON_SEQNO
            ,s.TELEPHONE
            ,s.IMG_PERSON
            ,s.FLAG_QUEONLINE
            ,s.PD_SEQNO
)
;

UPDATE MSCS_REPS_TM8 SET REPSPERSON_SEQNO = REPSPERSON_SEQNO_VAL WHERE TM8_SEQNO=TM8_SEQNO_VAL;  

INSERT INTO MSCS_REPS_PERSON_TMP
SELECT 
			e.REPSPERSON_SEQNO
			,UPPER(e.FAMILYNM)
			,UPPER(e.FIRSTNM)
			,UPPER(e.MIDDLENM)
			,e.SEX
			,e.BIRTH_DATE
			,e.NATIONAL_SEQNO
			,NULL OPASSPORTNO
			,NULL OPASSPORT_DATE
			,NULL OPASSPORTEXP_DATE
			,e.PASSPORTNO
			,e.PASSPORT_DATE
			,e.PASSPORTEXP_DATE
			,e.OPERMIT_SEQNO
			,e.OPERMIT_DATE
			,TM8_SEQNO_VAL
			,TM8NO_VAL
			,SAVE_DATE_VAL
			,SAVE_USER_VAL
			,SAVE_DATE_VAL
			,SAVE_USER_VAL
			,1 VERSION
			,NULL
			,e.APPVSTS
			,e.DOCTYPE
			,e.YEAR
			,NULL PERSONFLAG
			,NULL 
			,e.VISA_DATE
			,NULL STATUSENTRY
			,NULL STATUSENTRYDTE
			,e.DOC_DATE
			,DEPT_SEQNO_VAL
			,ZONE_VAL--e.ZONE_SEQNO
			,e.BIRTH_PLACE
			,NULL FEES_SEQNO
			,e.TM6NO
			,e.REASONDESC
			,SAVE_IP_CLIENT_VAL
			,SAVE_IP_CLIENT_VAL
			,NULL --e.IMG_PERSON
            ,NULL --e.CONVNO
            ,NULL--e.FEESNO
            ,NULL--e.FEESLIPBOOKNO
            ,NULL--e.FEESLIPNO
            ,NULL--e.FEESLIPAMOUNT
            ,NULL--e.PRATE_SEQNO
            ,NULL --TO_DATE(e.IN_DATE,'DD/MM/YYYY')
            ,NULL --e.PRINTFLAG
            ,e.BIRTH_PLACE
            ,e.AGE
            ,ROWNUM
FROM MSCS_REPS_TM8 e WHERE e.TM8_SEQNO=TM8_SEQNO_VAL;

INSERT INTO MSCS_REPS_PERSON_TMP
SELECT 
			NVL2(e.REPSPERSON_SEQNO,e.REPSPERSON_SEQNO,REPSPERSON_SEQNO.NEXTVAL)
			,UPPER(e.FAMILYNM)
			,UPPER(e.FIRSTNM)
			,UPPER(e.MIDDLENM)
			,e.SEX
			,e.BIRTH_DATE
			,e.NATIONAL_SEQNO
			,e.OPASSPORTNO
			,TO_DATE(e.OPASSPORT_DATE,'DD/MM/YYYY')
			,TO_DATE(e.OPASSPORTEXP_DATE,'DD/MM/YYYY')
			,e.CPASSPORTNO
			,TO_DATE(e.CPASSPORT_DATE,'DD/MM/YYYY')
			,TO_DATE(e.CPASSPORTEXP_DATE,'DD/MM/YYYY')
			,e.PERMIT_SEQNO
			,TO_DATE(e.PERMIT_DATE,'DD/MM/YYYY')
			,TM8_SEQNO_VAL
			,TM8NO_VAL
			,SAVE_DATE_VAL
			,SAVE_USER_VAL
			,SAVE_DATE_VAL
			,SAVE_USER_VAL
			,1 VERSION
			,NVL2(e.TM8CHILD_SEQNO,e.TM8CHILD_SEQNO,TM8CHILD_SEQNO.NEXTVAL)
			,e.APPVSTS
			,e.DOCTYPE
			,YEAR_VAL--e.YEAR
			,e.PERSONFLAG
			,e.VISA_SEQNO
			,TO_DATE(e.VISAEND_DATE,'DD/MM/YYYY')
			,e.STATUSENTRY
			,TO_DATE(e.STATUSENTRYDTE,'DD/MM/YYYY')
			,TO_DATE(e.DOC_DATE,'DD/MM/YYYY')
			,DEPT_SEQNO_VAL
			,ZONE_VAL--e.ZONE_SEQNO
			,e.CBIRTHPLC
			,NULL FEES_SEQNO
			,e.TM6NO
			,e.REASONCHILD
			,SAVE_IP_CLIENT_VAL
			,SAVE_IP_CLIENT_VAL
			,NULL --e.IMG_PERSON
            ,e.CONVNO
            ,NULL--e.FEESNO
            ,e.FEESLIPBOOKNO
            ,e.FEESLIPNO
            ,NULL--e.FEESLIPAMOUNT
            ,NULL--e.PRATE_SEQNO
            ,TO_DATE(e.IN_DATE,'DD/MM/YYYY')
            ,e.PRINTFLAG
            ,e.BIRTHPLC
            ,e.AGE
            ,ROWNUM +1

FROM json_table(REQ  FORMAT JSON, '$'
    COLUMNS (
    NESTED  PATH '$.personData[*]'
             COLUMNS (
             REPSPERSON_SEQNO  VARCHAR2 PATH '$.REPSPERSON_SEQNO',
			FAMILYNM  VARCHAR2 PATH '$.FAMILYNM',
			FIRSTNM  VARCHAR2 PATH '$.FIRSTNM',
			MIDDLENM  VARCHAR2 PATH '$.MIDDLENM',
			SEX  VARCHAR2 PATH '$.SEX',
			BIRTH_DATE  VARCHAR2 PATH '$.BIRTH_DATE',
			NATIONAL_SEQNO  VARCHAR2 PATH '$.NATIONAL_SEQNO',

			OPASSPORTNO  VARCHAR2 PATH '$.OPASSPORTNO',
			OPASSPORT_DATE  VARCHAR2 PATH '$.OPASSPORT_DATE',
			OPASSPORTEXP_DATE  VARCHAR2 PATH '$.OPASSPORTEXP_DATE',

			CPASSPORTNO  VARCHAR2 PATH '$.CPASSPORTNO',
			CPASSPORT_DATE  VARCHAR2 PATH '$.CPASSPORT_DATE',
			CPASSPORTEXP_DATE  VARCHAR2 PATH '$.CPASSPORTEXP_DATE',

            PERMIT_SEQNO  VARCHAR2 PATH '$.PERMIT_SEQNO',
			PERMIT_DATE  VARCHAR2 PATH '$.PERMIT_DATE',
			APPVSTS  VARCHAR2 PATH '$.APPVSTS',
            TM8CHILD_SEQNO  VARCHAR2 PATH '$.TM8CHILD_SEQNO',

			--YEAR  VARCHAR2 PATH '$.YEAR',
			PERSONFLAG  VARCHAR2 PATH '$.PERSONFLAG',
			VISA_SEQNO  VARCHAR2 PATH '$.VISA_SEQNO',
			VISAEND_DATE  VARCHAR2 PATH '$.VISAEND_DATE',
			STATUSENTRY  VARCHAR2 PATH '$.STATUSENTRY',
			STATUSENTRYDTE  VARCHAR2 PATH '$.STATUSENTRYDTE',
		    DOC_DATE  VARCHAR2 PATH '$.DOC_DATE',
			DOCTYPE  VARCHAR2 PATH '$.DOCTYPE',
			ZONE_SEQNO  VARCHAR2 PATH '$.ZONE_SEQNO',
			CBIRTHPLC  VARCHAR2 PATH '$.CBIRTHPLC',
		    TM6NO  VARCHAR2 PATH '$.TM6NO',
			REASONCHILD  VARCHAR2 PATH '$.REASONCHILD',
            CONVNO  VARCHAR2 PATH '$.recordInfo.CONVNO',
            FEESNO  VARCHAR2 PATH '$.recordInfo.FEESNO',
            FEESLIPBOOKNO  VARCHAR2 PATH '$.FEESLIPBOOKNO',
            FEESLIPNO  VARCHAR2 PATH '$.FEESLIPNO',
            FEESLIPAMOUNT  VARCHAR2 PATH '$.recordInfo.FEESLIPAMOUNT',
            PRATE_SEQNO  VARCHAR2 PATH '$.recordInfo.PRATE_SEQNO',
            IN_DATE  VARCHAR2 PATH '$.recordInfo.IN_DATE',
            PRINTFLAG  VARCHAR2 PATH '$.recordInfo.PRINTFLAG',
            BIRTHPLC  VARCHAR2 PATH '$.BIRTHPLC',
            AGE  VARCHAR2 PATH '$.AGE'
))) e WHERE e.FIRSTNM IS NOT NULL;

UPDATE MSCS_EXT_PERSON_TMP
SET PRATE_SEQNO=(
SELECT i_prate_seqno 
FROM MSCS_FS_SETTINGFEESLIP
WHERE IPADDRESS = SAVE_IP_CLIENT_VAL AND DEPT_SEQNO = DEPT_SEQNO_VAL);

REQ_DATA := json(REQ);
  RECORD_DATA :=JSON(REQ_DATA.get('recordInfo'));
  begin 
    dbms_lob.createtemporary(C_IMGINOUT_VAL, true);
    RECORD_DATA.get('IMGINOUT').get_string(C_IMGINOUT_VAL);
    IMGINOUT_VAL:=FN_CLOB_TO_BLOB(C_IMGINOUT_VAL);
EXCEPTION WHEN OTHERS THEN
 IMGINOUT_VAL := null;
end;

begin
  dbms_lob.createtemporary(C_IMG_PERSON_VAL, true);
  RECORD_DATA.get('IMG_PERSON').get_string(C_IMG_PERSON_VAL);
IMG_PERSON_VAL:=FN_CLOB_TO_BLOB(C_IMG_PERSON_VAL);
EXCEPTION WHEN OTHERS THEN
 IMG_PERSON_VAL := null;
end;

UPDATE MSCS_REPS_TM8 SET IMG_PERSON=nvl(IMG_PERSON_VAL,IMG_PERSON),IMGINOUT=nvl(IMGINOUT_VAL,IMGINOUT) WHERE TM8_SEQNO=TM8_SEQNO_VAL;

PERSONS_DATA := JSON_LIST(REQ_DATA.get('personData'));

if PERSONS_DATA is not null then
if PERSONS_DATA.count() >0 then
FOR i IN 1 .. PERSONS_DATA.count() LOOP
PERSON_DATA:=JSON(PERSONS_DATA.get(i));

begin 
 dbms_lob.createtemporary(C_IMG_PERSON_VAL, true);
 PERSON_DATA.get('IMG_PERSON').get_string(C_IMG_PERSON_VAL);
 IMG_PERSON_VAL :=FN_CLOB_TO_BLOB(C_IMG_PERSON_VAL);
EXCEPTION WHEN OTHERS THEN
 IMG_PERSON_VAL := null;
end;



UPDATE MSCS_REPS_PERSON_TMP SET IMG_PERSON=nvl(IMG_PERSON_VAL,IMG_PERSON)
WHERE TM8_SEQNO=TM8_SEQNO_VAL AND ROWNUM_TEMP=i+1;
END LOOP;
end if;
end if;


DELETE
FROM MSCS_REPS_PERSON d
WHERE EXISTS (
SELECT s.REPSPERSON_SEQNO
            FROM MSCS_REPS_TM8CHILD s 
            WHERE s.TM8_SEQNO=TM8_SEQNO_VAL AND s.REPSPERSON_SEQNO =d.REPSPERSON_SEQNO
)
AND NOT EXISTS (SELECT s.REPSPERSON_SEQNO
            FROM MSCS_REPS_PERSON_TMP s 
            WHERE s.TM8_SEQNO=TM8_SEQNO_VAL AND s.REPSPERSON_SEQNO =d.REPSPERSON_SEQNO
);

MERGE INTO MSCS_REPS_PERSON d
USING (
SELECT REPSPERSON_SEQNO
		,FAMILYNM
		,FIRSTNM
		,MIDDLENM
		,SEX
		,BIRTH_DATE
		,NATIONAL_SEQNO
		,OPASSPORTNO
		,OPASSPORT_DATE
		,OPASSPORTEXP_DATE
		,CPASSPORTNO
		,CPASSPORT_DATE
		,CPASSPORTEXP_DATE
		,PERMIT_SEQNO
		,PERMIT_DATE
		,TM8_SEQNO
		,TM8NO
		,CREATE_DATE
		,CREATE_BY
		,UPDATE_DATE
		,UPDATE_BY
		,VERSION
		,TM8CHILD_SEQNO
		,APPVSTS
		,DOCTYPE
		,YEAR
		,PERSONFLAG
		,VISA_SEQNO
		,VISAEND_DATE
		,STATUSENTRY
		,STATUSENTRYDTE
		,DOC_DATE
		,DEPT_SEQNO
		,ZONE_SEQNO
FROM MSCS_REPS_PERSON_TMP  WHERE TM8_SEQNO=TM8_SEQNO_VAL
) s
ON (d.REPSPERSON_SEQNO=s.REPSPERSON_SEQNO)
WHEN MATCHED THEN 
UPDATE SET
        d.FAMILYNM=s.FAMILYNM
            ,d.FIRSTNM=s.FIRSTNM
            ,d.MIDDLENM=s.MIDDLENM
            ,d.SEX=s.SEX
            ,d.BIRTH_DATE=s.BIRTH_DATE
            ,d.NATIONAL_SEQNO=s.NATIONAL_SEQNO
            ,d.OPASSPORTNO=s.OPASSPORTNO
            ,d.OPASSPORT_DATE=s.OPASSPORT_DATE
            ,d.OPASSPORTEXP_DATE=s.OPASSPORTEXP_DATE
            ,d.CPASSPORTNO=s.CPASSPORTNO
            ,d.CPASSPORT_DATE=s.CPASSPORT_DATE
            ,d.CPASSPORTEXP_DATE=s.CPASSPORTEXP_DATE
            ,d.PERMIT_SEQNO=s.PERMIT_SEQNO
            ,d.PERMIT_DATE=s.PERMIT_DATE
            ,d.TM8_SEQNO=s.TM8_SEQNO
            ,d.TM8NO=s.TM8NO
           -- ,d.CREATE_DATE=s.CREATE_DATE
            --,d.CREATE_BY=s.CREATE_BY
            ,d.UPDATE_DATE=s.UPDATE_DATE
            ,d.UPDATE_BY=s.UPDATE_BY
            ,d.VERSION=s.VERSION
            ,d.TM8CHILD_SEQNO=s.TM8CHILD_SEQNO
            ,d.APPVSTS=s.APPVSTS
            ,d.DOCTYPE=s.DOCTYPE
            ,d.YEAR=s.YEAR
            ,d.PERSONFLAG=s.PERSONFLAG
            ,d.VISA_SEQNO=s.VISA_SEQNO
            ,d.VISAEND_DATE=s.VISAEND_DATE
            ,d.STATUSENTRY=s.STATUSENTRY
            ,d.STATUSENTRYDTE=s.STATUSENTRYDTE
            ,d.DOC_DATE=s.DOC_DATE
            ,d.DEPT_SEQNO=s.DEPT_SEQNO
            ,d.ZONE_SEQNO=s.ZONE_SEQNO
WHEN NOT MATCHED THEN
INSERT (
		REPSPERSON_SEQNO
		,FAMILYNM
		,FIRSTNM
		,MIDDLENM
		,SEX
		,BIRTH_DATE
		,NATIONAL_SEQNO
		,OPASSPORTNO
		,OPASSPORT_DATE
		,OPASSPORTEXP_DATE
		,CPASSPORTNO
		,CPASSPORT_DATE
		,CPASSPORTEXP_DATE
		,PERMIT_SEQNO
		,PERMIT_DATE
		,TM8_SEQNO
		,TM8NO
		,CREATE_DATE
		,CREATE_BY
		,UPDATE_DATE
		,UPDATE_BY
		,VERSION
		,TM8CHILD_SEQNO
		,APPVSTS
		,DOCTYPE
		,YEAR
		,PERSONFLAG
		,VISA_SEQNO
		,VISAEND_DATE
		,STATUSENTRY
		,STATUSENTRYDTE
		,DOC_DATE
		,DEPT_SEQNO
		,ZONE_SEQNO
		)
VALUES (s.REPSPERSON_SEQNO
                    ,s.FAMILYNM
                    ,s.FIRSTNM
                    ,s.MIDDLENM
                    ,s.SEX
                    ,s.BIRTH_DATE
                    ,s.NATIONAL_SEQNO
                    ,s.OPASSPORTNO
                    ,s.OPASSPORT_DATE
                    ,s.OPASSPORTEXP_DATE
                    ,s.CPASSPORTNO
                    ,s.CPASSPORT_DATE
                    ,s.CPASSPORTEXP_DATE
                    ,s.PERMIT_SEQNO
                    ,s.PERMIT_DATE
                    ,s.TM8_SEQNO
                    ,s.TM8NO
                    ,s.CREATE_DATE
                    ,s.CREATE_BY
                    ,s.UPDATE_DATE
                    ,s.UPDATE_BY
                    ,s.VERSION
                    ,s.TM8CHILD_SEQNO
                    ,s.APPVSTS
                    ,s.DOCTYPE
                    ,s.YEAR
                    ,s.PERSONFLAG
                    ,s.VISA_SEQNO
                    ,s.VISAEND_DATE
                    ,s.STATUSENTRY
                    ,s.STATUSENTRYDTE
                    ,s.DOC_DATE
                    ,s.DEPT_SEQNO
                    ,s.ZONE_SEQNO
)
;

DELETE 
FROM MSCS_REPS_TM8CHILD d
WHERE EXISTS (
SELECT s.REPSPERSON_SEQNO
            FROM MSCS_REPS_TM8CHILD s 
            WHERE s.TM8_SEQNO=TM8_SEQNO_VAL AND s.REPSPERSON_SEQNO =d.REPSPERSON_SEQNO
)
AND NOT EXISTS (SELECT s.REPSPERSON_SEQNO
            FROM MSCS_REPS_PERSON_TMP s 
            WHERE s.TM8_SEQNO=TM8_SEQNO_VAL AND s.REPSPERSON_SEQNO =d.REPSPERSON_SEQNO
);

MERGE INTO MSCS_REPS_TM8CHILD d
USING (
            SELECT  TM8CHILD_SEQNO
                    ,TM8_SEQNO
                    ,FAMILYNM CFAMILYNM
                    ,FIRSTNM CFIRSTNM
                    ,MIDDLENM CMIDDLENM
                    ,SEX
                    ,AGE
                    ,BIRTH_DATE CBIRTH_DATE
                    ,BIRTHPLC CBIRTHPLC
                    ,PERMIT_DATE CPERMIT_DATE
                    ,CREATE_DATE
                    ,CREATE_BY
                    ,UPDATE_DATE
                    ,UPDATE_BY
                    ,VERSION
                    ,FEES_SEQNO
                    ,TM6NO
                    ,REASONCHILD
                    ,APPVSTS APPVSTSCHILD
                    ,NATIONAL_SEQNO NATION_SEQNO
                    ,CPASSPORTNO
                    ,CPASSPORT_DATE
                    ,CPASSPORTEXP_DATE
                    ,PERMIT_SEQNO
                    ,TM8NO
                    ,YEAR
                    ,DOCTYPE
                    ,IPADDRESS
                    ,UIPADDRESS
                    ,REPSPERSON_SEQNO
                    ,IMG_PERSON
            FROM MSCS_REPS_PERSON_TMP  WHERE TM8_SEQNO=TM8_SEQNO_VAL AND ROWNUM_TEMP > 1
) s
ON (d.TM8CHILD_SEQNO =s.TM8CHILD_SEQNO )
WHEN MATCHED THEN
UPDATE SET
            d.TM8_SEQNO=s.TM8_SEQNO
            ,d.CFAMILYNM=s.CFAMILYNM
            ,d.CFIRSTNM=s.CFIRSTNM
            ,d.CMIDDLENM=s.CMIDDLENM
            ,d.SEX=s.SEX
            ,d.AGE=s.AGE
            ,d.CBIRTH_DATE=s.CBIRTH_DATE
            ,d.CBIRTHPLC=s.CBIRTHPLC
            ,d.CPERMIT_DATE=s.CPERMIT_DATE
           -- ,d.CREATE_DATE=s.CREATE_DATE
            --,d.CREATE_BY=s.CREATE_BY
            ,d.UPDATE_DATE=s.UPDATE_DATE
            ,d.UPDATE_BY=s.UPDATE_BY
            ,d.VERSION=s.VERSION
            ,d.FEES_SEQNO=s.FEES_SEQNO
            ,d.TM6NO=s.TM6NO
            ,d.REASONCHILD=s.REASONCHILD
            ,d.APPVSTSCHILD=s.APPVSTSCHILD
            ,d.NATION_SEQNO=s.NATION_SEQNO
            ,d.PASSPORTNO=s.CPASSPORTNO
            ,d.PASSPORT_DATE=s.CPASSPORT_DATE
            ,d.PASSPORTEXP_DATE=s.CPASSPORTEXP_DATE
            ,d.PERMIT_SEQNO=s.PERMIT_SEQNO
            ,d.TM8NO=s.TM8NO
            ,d.YEAR=s.YEAR
            ,d.DOCTYPE=s.DOCTYPE
            ,d.IPADDRESS=s.IPADDRESS
            ,d.UIPADDRESS=s.UIPADDRESS
            ,d.REPSPERSON_SEQNO=s.REPSPERSON_SEQNO
            ,d.IMG_PERSON=s.IMG_PERSON

WHEN NOT MATCHED THEN
INSERT 
		(TM8CHILD_SEQNO
,TM8_SEQNO
,CFAMILYNM
,CFIRSTNM
,CMIDDLENM
,SEX
,AGE
,CBIRTH_DATE
,CBIRTHPLC
,CPERMIT_DATE
,CREATE_DATE
,CREATE_BY
,UPDATE_DATE
,UPDATE_BY
,VERSION
,FEES_SEQNO
,TM6NO
,REASONCHILD
,APPVSTSCHILD
,NATION_SEQNO
,PASSPORTNO
,PASSPORT_DATE
,PASSPORTEXP_DATE
,PERMIT_SEQNO
,TM8NO
,YEAR
,DOCTYPE
,IPADDRESS
,UIPADDRESS
,REPSPERSON_SEQNO
,IMG_PERSON

)
VALUES(
       s.TM8CHILD_SEQNO
,s.TM8_SEQNO
,s.CFAMILYNM
,s.CFIRSTNM
,s.CMIDDLENM
,s.SEX
,s.AGE
,s.CBIRTH_DATE
,s.CBIRTHPLC
,s.CPERMIT_DATE
,s.CREATE_DATE
,s.CREATE_BY
,s.UPDATE_DATE
,s.UPDATE_BY
,s.VERSION
,s.FEES_SEQNO
,s.TM6NO
,s.REASONCHILD
,s.APPVSTSCHILD
,s.NATION_SEQNO
,s.CPASSPORTNO
,s.CPASSPORT_DATE
,s.CPASSPORTEXP_DATE
,s.PERMIT_SEQNO
,s.TM8NO
,s.YEAR
,s.DOCTYPE
,s.IPADDRESS
,s.UIPADDRESS
,s.REPSPERSON_SEQNO
,s.IMG_PERSON

);

SELECT COUNT(*) INTO NUMBER_OF_PERSON_VAL FROM MSCS_REPS_PERSON_TMP WHERE TM8_SEQNO=TM8_SEQNO_VAL;

IF (NUMBER_OF_PERSON_VAL=1) THEN
	--UPDATE MSCS_REPS_TM8CHILD SET PERSON_STS='A' WHERE TM8_SEQNO=TM8_SEQNO_VAL;
	UPDATE MSCS_REPS_PERSON SET PERSONFLAG='A' WHERE TM8_SEQNO=TM8_SEQNO_VAL;
ELSE
    --UPDATE MSCS_REPS_TM8CHILD SET PERSONFLAG='C' WHERE TM8_SEQNO=TM8_SEQNO_VAL;
	UPDATE MSCS_REPS_PERSON SET PERSONFLAG='C' WHERE TM8_SEQNO=TM8_SEQNO_VAL;
	--UPDATE MSCS_REPS_TM8CHILD SET PERSONFLAG='M' WHERE TM8_SEQNO=TM8_SEQNO_VAL AND ROWNUM=1;
	UPDATE MSCS_REPS_PERSON SET PERSONFLAG='M' WHERE TM8_SEQNO=TM8_SEQNO_VAL AND ROWNUM=1;
END IF;

--3.1 FEES
IF(FEE_STS_VAL='Y') THEN

FOR i IN 0 .. NUMBER_OF_PERSON_VAL-1 LOOP

    begin

    SELECT MAXSLIPNO,MAXSLIPBOOKNO,i_prate_seqno  
    INTO MAXSLIPNO_VAL,MAXSLIPBOOKNO_VAL,PRATE_SEQNO_VAL 
    FROM MSCS_FS_SETTINGFEESLIP
    WHERE DEPT_SEQNO=DEPT_SEQNO_VAL AND IPADDRESS=SAVE_IP_CLIENT_VAL AND ROWNUM=1;--MAKE SURE WHEN IPADDRESS DON'T SET UNIQUE
    exception   
    when no_data_found then
    ERROR_CODE := 'E0005';
    RAISE_APPLICATION_ERROR(-20000, 'SYSERROR-E0005');
     end;


UPDATE MSCS_REPS_PERSON_TMP p SET p.PRATE_SEQNO=PRATE_SEQNO_VAL,p.FEESLIPAMOUNT=(SELECT PRATEAMOUNT FROM PIBICSDM2.PAYMENTRATE WHERE PRATE_SEQNO=PRATE_SEQNO_VAL)
,p.FEES_SEQNO=FEES_SEQNO_VAL
WHERE p.TM8_SEQNO=TM8_SEQNO_VAL;

if v_mode ='I' then
FEES_SEQNO_VAL := FEES_SEQNO.NEXTVAL;
INSERT INTO MSCS_FS_FEES (FEES_SEQNO, FEESNO, FEESLIPNO, FEESLIPBOOKNO, FEESLIPDATE, FEESLIPTOTAL
   , PRINTFLAG
   , DEPT_SEQNO
   , PASSPORTNO, TM6NO, EFIRSTNM, EMIDDLENM, EFAMILYNM, SEX, BIRTHDTE
   , NATION_SEQNO
   , CONV_SEQNO, CONVREGNO, INDTE
   , VISATYPE_SEQNO, FEESSTATUS, FEESREMARK, FLAG_SYSTEM
   , CREATE_BY, CREATE_DATE, CREATE_IP, UPDATE_BY, UPDATE_DATE
   , UPDATE_IP, VERSION, SLIPTYPE, SUFFIX_SEQNO, APPROVE_BY) 
SELECT  FEES_SEQNO_VAL, TM8_SEQNO_VAL--FEESNO_VAL
  ,case when i=0 then FEESLIPNO_VAL else f.FEESLIPNO end
  ,case when i=0 then FEESLIPBOOKNO_VAL else f.FEESLIPBOOKNO end
  ,SAVE_DATE_VAL FEESLIPDATE, FEESLIPTOTAL_VAL
   ,'Y'-- f.PRINTFLAG
   , DEPT_SEQNO_VAL
   , f.CPASSPORTNO, f.TM6NO, f.FIRSTNM, f.MIDDLENM, f.FAMILYNM, f.SEX, f.BIRTH_DATE 
   , f.NATIONAL_SEQNO
   , NULL CONV_SEQNO, f.CONVNO CONVREGNO,f.IN_DATE INDTE
   , f.VISA_SEQNO, 'ACTIVE' AS FEESSTATUS, NULL AS FEESREMARK, SYSTEM_CODE_VAL || ' ' || MODULE_VAL AS FLAG_SYSTEM 
   , SAVE_USER_VAL, SAVE_DATE_VAL,SAVE_IP_CLIENT_VAL, SAVE_USER_VAL, SAVE_DATE_VAL
   , SAVE_IP_CLIENT_VAL, 1 VERSION, 'M' SLIPTYPE, i_suffix_seqno SUFFIX_SEQNO, SAVE_USER_VAL APPROVE_BY
FROM MSCS_REPS_PERSON_TMP f 
WHERE f.TM8_SEQNO = TM8_SEQNO_VAL AND f.ROWNUM_TEMP=i+1;

INSERT INTO MSCS_FS_FEESDETAIL (FEESDETAIL_SEQNO, PRATE_SEQNO, FEES_SEQNO, FEESLIPAMOUNT
   , CREATE_BY, CREATE_DATE, CREATE_IP, UPDATE_BY, UPDATE_DATE, UPDATE_IP, VERSION)
SELECT FEESDETAIL_SEQNO.NEXTVAL,t.PRATE_SEQNO, FEES_SEQNO_VAL,t.FEESLIPAMOUNT
,SAVE_USER_VAL,SAVE_DATE_VAL,SAVE_IP_CLIENT_VAL,SAVE_USER_VAL,SAVE_DATE_VAL,SAVE_IP_CLIENT_VAL,1 AS VERSION
FROM MSCS_REPS_PERSON_TMP t
WHERE t.TM8_SEQNO = TM8_SEQNO_VAL AND t.ROWNUM_TEMP=i+1;

-- UPDATE FEESLIPTOTAL
UPDATE MSCS_FS_FEES SET FEESLIPTOTAL =(SELECT SUM(FEESLIPAMOUNT) 
FROM MSCS_FS_FEESDETAIL WHERE FEES_SEQNO=FEES_SEQNO_VAL) WHERE FEES_SEQNO=FEES_SEQNO_VAL;

-- IN CASE AUTO SLIP
IF(SLIPTYPE_VAL='A') THEN
UPDATE MSCS_FS_FEES SET FEESLIPNO = MAXSLIPNO_VAL,FEESLIPBOOKNO =MAXSLIPBOOKNO_VAL,SLIPTYPE = SLIPTYPE_VAL
WHERE FEES_SEQNO=FEES_SEQNO_VAL;
MAXSLIPNO_VAL:=MAXSLIPNO_VAL+1;

-- UPDATE SLIPNUM & RUNNING
UPDATE MSCS_FS_SETTINGFEESLIP f SET f.SLIPNUM = f.SLIPNUM-1 ,f.MAXSLIPNO=MAXSLIPNO_VAL
WHERE DEPT_SEQNO=DEPT_SEQNO_VAL AND IPADDRESS=SAVE_IP_CLIENT_VAL;
END IF;
else
MERGE INTO MSCS_FS_FEES d
USING (
SELECT  FEES_SEQNO_VAL as FEES_SEQNO, TM8_SEQNO_VAL as FEESNO
  ,case when i=0 then FEESLIPNO_VAL else f.FEESLIPNO end as FEESLIPNO 
  ,case when i=0 then FEESLIPBOOKNO_VAL else f.FEESLIPBOOKNO end as FEESLIPBOOKNO
  ,SAVE_DATE_VAL as  FEESLIPDATE, FEESLIPTOTAL_VAL as FEESLIPTOTAL
   ,'Y' as PRINTFLAG
   , DEPT_SEQNO_VAL as DEPT_SEQNO
   , f.CPASSPORTNO as PASSPORTNO, f.TM6NO, f.FIRSTNM as EFIRSTNM
   , f.MIDDLENM as EMIDDLENM, f.FAMILYNM as EFAMILYNM, f.SEX
    , f.BIRTH_DATE  as BIRTHDTE
   , f.NATIONAL_SEQNO as NATION_SEQNO
   , NULL as  CONV_SEQNO, f.CONVNO as CONVREGNO,f.IN_DATE as INDTE
   , f.VISA_SEQNO as VISATYPE_SEQNO, 'ACTIVE' AS FEESSTATUS, NULL AS FEESREMARK
   , SYSTEM_CODE_VAL || ' ' || MODULE_VAL AS FLAG_SYSTEM 
   , SAVE_USER_VAL as UPDATE_BY, SAVE_DATE_VAL as update_date
    ,SAVE_IP_CLIENT_VAL as UPDATE_IP
   ,  1 VERSION, i_suffix_seqno SUFFIX_SEQNO
FROM MSCS_REPS_PERSON_TMP f 
WHERE f.TM8_SEQNO = TM8_SEQNO_VAL AND f.ROWNUM_TEMP=i+1
) s
ON (d.FEES_SEQNO=s.FEES_SEQNO)
WHEN MATCHED THEN
UPDATE SET 
d.FEESNO=s.FEESNO
,d.FEESLIPNO=s.FEESLIPNO
,d.FEESLIPBOOKNO=s.FEESLIPBOOKNO
,d.FEESLIPDATE=s.FEESLIPDATE
,d.FEESLIPTOTAL=s.FEESLIPTOTAL
,d.PRINTFLAG=s.PRINTFLAG
,d.DEPT_SEQNO=s.DEPT_SEQNO
,d.PASSPORTNO=s.PASSPORTNO
,d.TM6NO=s.TM6NO
,d.EFIRSTNM=s.EFIRSTNM
,d.EMIDDLENM=s.EMIDDLENM
,d.EFAMILYNM=s.EFAMILYNM
,d.SEX=s.SEX
,d.BIRTHDTE=s.BIRTHDTE
,d.NATION_SEQNO=s.NATION_SEQNO
,d.CONV_SEQNO=s.CONV_SEQNO
,d.CONVREGNO=s.CONVREGNO
,d.INDTE=s.INDTE
,d.VISATYPE_SEQNO=s.VISATYPE_SEQNO
,d.FEESSTATUS=s.FEESSTATUS
,d.FEESREMARK=s.FEESREMARK
,d.FLAG_SYSTEM=s.FLAG_SYSTEM
,d.UPDATE_BY=s.UPDATE_BY
,d.UPDATE_DATE=s.UPDATE_DATE
,d.UPDATE_IP=s.UPDATE_IP
,d.VERSION=s.VERSION
,d.SUFFIX_SEQNO=s.SUFFIX_SEQNO
,d.APPROVE_BY=s.UPDATE_BY;


-- SELECT *
DELETE
FROM MSCS_FS_FEESDETAIL d
WHERE d.FEES_SEQNO = FEES_SEQNO_VAL ;

INSERT into MSCS_FS_FEESDETAIL( 
        FEESDETAIL_SEQNO 
        , PRATE_SEQNO 
        , FEES_SEQNO 
        , FEESLIPAMOUNT 
        , CREATE_BY 
        , CREATE_DATE 
        , CREATE_IP 
        , UPDATE_BY 
        , UPDATE_DATE 
        , UPDATE_IP 
        , VERSION)
SELECT FEESDETAIL_SEQNO.NEXTVAL,t.PRATE_SEQNO, FEES_SEQNO_VAL,t.FEESLIPAMOUNT
,SAVE_USER_VAL,SAVE_DATE_VAL,SAVE_IP_CLIENT_VAL,SAVE_USER_VAL,SAVE_DATE_VAL,SAVE_IP_CLIENT_VAL,1 AS VERSION
FROM MSCS_REPS_PERSON_TMP t
WHERE t.TM8_SEQNO = TM8_SEQNO_VAL AND t.ROWNUM_TEMP=i+1 ;

-- UPDATE FEESLIPTOTAL
UPDATE MSCS_FS_FEES SET FEESLIPTOTAL =(SELECT SUM(FEESLIPAMOUNT) FROM MSCS_FS_FEESDETAIL WHERE FEES_SEQNO=FEES_SEQNO_VAL) WHERE FEES_SEQNO=FEES_SEQNO_VAL;
end if;
--4
IF(i=0) THEN
UPDATE MSCS_REPS_TM8 SET FEES_SEQNO = FEES_SEQNO_VAL WHERE TM8_SEQNO=TM8_SEQNO_VAL;
FEES_SEQNO_MAIN_VAL:=FEES_SEQNO_VAL;
i_mainfee_seqno := FEES_SEQNO_VAL;
END IF;

IF(i>0) THEN
SELECT  f.REPSPERSON_SEQNO
into REPSPERSON_SEQNO_VAL
FROM MSCS_REPS_PERSON_TMP f 
WHERE f.TM8_SEQNO = TM8_SEQNO_VAL AND f.ROWNUM_TEMP=i+1;

UPDATE MSCS_REPS_TM8CHILD SET FEES_SEQNO = FEES_SEQNO_VAL
WHERE TM8_SEQNO=TM8_SEQNO_VAL AND REPSPERSON_SEQNO=REPSPERSON_SEQNO_VAL;
END IF;

END LOOP;
END IF;


IF(v_update_seqno ='Y') THEN

    begin
     if v_zone_seqno is null then
     SELECT b.TM8NO,b.TM8RUNNING_SEQNO INTO TM8NO_VAL,TM8RUNNING_SEQNO_VAL
     FROM MSCS_REPS_TM8RUNNING b
     where b.DEPT_SEQNO = DEPT_SEQNO_VAL
           AND ROWNUM =1;   
    else
     SELECT b.TM8NO,b.TM8RUNNING_SEQNO INTO TM8NO_VAL,TM8RUNNING_SEQNO_VAL
     FROM  MSCS_REPS_TM8RUNNING b 
     where b.zone = v_zone_seqno 
           AND b.DEPT_SEQNO = DEPT_SEQNO_VAL
           AND ROWNUM =1;
    end if;
    exception   
    when no_data_found then
    ERROR_CODE := 'E0007';
    RAISE_APPLICATION_ERROR(-20000, 'SYSERROR-E0007');
     end;

   update MSCS_REPS_TM8
   set TM8NO =TM8NO_VAL
   where tm8_seqno =TM8_SEQNO_VAL;
    UPDATE MSCS_REPS_TM8RUNNING
    SET TM8NO=TM8NO_VAL+1,
        update_date =sysdate,
        update_by =SAVE_USER_VAL
    WHERE TM8RUNNING_SEQNO = TM8RUNNING_SEQNO_VAL;
    --SELECT TM8NO INTO TM8NO_VAL FROM MSCS_REPS_TM8RUNNING WHERE YEAR=YEAR_VAL AND ZONE=ZONE_VAL AND ROWNUM =1;

	--UPDATE MSCS_REPS_TM8RUNNING SET TM8NO=TM8NO_VAL+1 WHERE YEAR=YEAR_VAL AND ZONE=ZONE_VAL;

    END IF;


COMMIT;
    --SELECT json_object(
	--	'TM8_SEQNO' VALUE TM8_SEQNO_VAL
	--	--,'TM8CHILD_SEQNO' VALUE TM8CHILD_SEQNO_VAL
	--	,'REPSPERSON_SEQNO' VALUE REPSPERSON_SEQNO_VAL
	--	,'FEES_SEQNO' VALUE FEES_SEQNO_VAL
	--) INTO RES FROM DUAL;
	--htp.prn('{"recordInfo":'||RES||',"msgInfo":{"msg_code":"00","msg_desc":"success"}}'); 

   -- RES :='[{"FEES_SEQNO":"","FEESLIPNO":"","TM8_SEQNO":'||TM8_SEQNO_VAL||',"FEESLIPBOOKNO":"","IS_MAIN":1}]';
       select  JSON_ARRAYAGG(
    JSON_OBJECT ( 'TM8_SEQNO' VALUE (case when d.tm8_seqno is not null then d.tm8_seqno end)
        ,'TM8NO' VALUE d.TM8NO
        ,'YEAR' VALUE d.YEAR
        ,'prate' VALUE i_prate_seqno
        ,'doctype' VALUE DOCTYPE_VAL
        ,'IS_MAIN' VALUE (case when d.tm8_seqno is null then 0 else 1 end)
        )
   ) 
 into RES
   from   MSCS_REPS_TM8 d 
   where d.tm8_seqno =TM8_SEQNO_VAL;
    select count(1) INTO i_count
    from  mscs_fs_fees a 
    where a.fees_seqno =FEES_SEQNO_VAL and rownum=1;
    if i_count >0 then
       select  JSON_ARRAYAGG(
    JSON_OBJECT ( 'FEES_SEQNO' value a.FEES_SEQNO
        ,'FEESLIPNO' value a.FEESLIPNO
        ,'FEESLIPBOOKNO' value a.FEESLIPBOOKNO
        ,'TM8_SEQNO' VALUE (case when d.tm8_seqno is not null then d.tm8_seqno end)--TM8_SEQNO_VAL
	--	,'TM8CHILD_SEQNO' VALUE TM8CHILD_SEQNO_VAL
		--,'REPSPERSON_SEQNO' VALUE REPSPERSON_SEQNO_VAL
		--,'FEES_SEQNO' VALUE FEES_SEQNO_VAL
        ,'FEESLIPTOTAL' VALUE  a.FEESLIPTOTAL
        ,'TM8NO' VALUE d.TM8NO
        ,'YEAR' VALUE d.YEAR
        ,'prate' VALUE i_prate_seqno
        ,'doctype' VALUE DOCTYPE_VAL
        ,'IS_MAIN' VALUE (case when d.tm8_seqno is null then 0 else 1 end)
        )
   ) 
   into RES
   from  mscs_fs_fees a 
    left join MSCS_FS_FEESDETAIL b on a.FEES_SEQNO =b.FEES_SEQNO
    left join PIBICSDM2.PAYMENTRATE c on b.PRATE_SEQNO=c.PRATE_SEQNO
    left join MSCS_REPS_TM8 d on a.fees_seqno = d.fees_seqno
    where a.fees_seqno in ( 
      SELECT regexp_substr(a.sfee_seqno, '[^,]+', 1, LEVEL) as fee_seqno
    FROM   ( select a.FEES_SEQNO||','||b.FEES_SEQNO as sfee_seqno
    from MSCS_REPS_TM8 a
    left join MSCS_REPS_TM8CHILD b on a.tm8_seqno =b.tm8_seqno
    where a.tm8_seqno =TM8_SEQNO_VAL ) a
    CONNECT BY regexp_substr(a.sfee_seqno, '[^,]+', 1, LEVEL) IS NOT NULL
    );
    end if;
   P_RESPONSE := '{"recordInfo":'||RES||',"msgInfo":{"msg_code":"00","msg_desc":"success"}}'; 
     else 
    SELECT FN_GET_ERROR_MESSAGE('E0005','') INTO ERROR_MESSAGE FROM DUAL;
   P_RESPONSE := '{"msgInfo":{"msg_code":"99","msg_desc":"' || ERROR_MESSAGE || '"}}';  
   end if;
    EXCEPTION 
 WHEN OTHERS THEN ROLLBACK;
   ERROR_MESSAGE:=SQLERRM;
 	SELECT FN_GET_ERROR_MESSAGE(ERROR_CODE,ERROR_MESSAGE) INTO ERROR_MESSAGE FROM DUAL;
    P_RESPONSE := '{"msgInfo":{"msg_code":"99","msg_desc":"' || ERROR_MESSAGE || '"}}';
  END SP_TM8;

END PKG_REPS;
/
  GRANT EXECUTE ON "SERVAPP"."PKG_REPS" TO "BIOSAADM";
