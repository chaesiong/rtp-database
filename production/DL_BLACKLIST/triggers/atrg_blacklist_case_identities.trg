CREATE OR REPLACE EDITIONABLE TRIGGER "DL_BLACKLIST"."ATRG_BLACKLIST_CASE_IDENTITIES" 
  after insert or update or delete
  on DL_BLACKLIST.BLACKLIST_CASE_IDENTITIES
  for each row
declare
  PRAGMA AUTONOMOUS_TRANSACTION;
  v_mode varchar2(1);
  v_rowid varchar2(18);
  v_colname dl_maintenance.trig_main.t_array;
  v_coldata_old dl_maintenance.trig_main.t_array;
  v_coldata_new dl_maintenance.trig_main.t_array;
begin
  /* Auto-generated by TRIG_TOOLS at 30.10.2019 01:00:52 */
  IF DELETING THEN
   v_mode:='D';
   v_rowid:=:old.rowid;
END IF;
IF INSERTING THEN
   v_mode:='I';
   v_rowid:=:new.rowid;
END IF;
IF UPDATING THEN
   v_mode:='U';
   v_rowid:=:old.rowid;
END IF;
v_colname:= dl_maintenance.trig_main.t_array ( 'ID','BLACKLIST_CASE','IDENTITY');
v_coldata_new:= dl_maintenance.trig_main.t_array ( :new.ID,:new.BLACKLIST_CASE,:new.IDENTITY);
v_coldata_old:= dl_maintenance.trig_main.t_array ( :old.ID,:old.BLACKLIST_CASE,:old.IDENTITY);
dl_maintenance.trig_main.trigger('DL_BLACKLIST','BLACKLIST_CASE_IDENTITIES',v_rowid,v_mode,dl_common.pkg_session.get_audit_user(),v_colname,v_coldata_old,v_coldata_new);
commit;
exception when others then
  dl_maintenance.trig_main.log('Exception in trigger: BLACKLIST_CASE_IDENTITIES',sqlerrm);
  commit;
end;
/
ALTER TRIGGER "DL_BLACKLIST"."ATRG_BLACKLIST_CASE_IDENTITIES" ENABLE;
