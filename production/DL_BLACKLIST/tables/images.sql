CREATE TABLE "DL_BLACKLIST"."IMAGES" 
   (	"ID" VARCHAR2(32 CHAR) DEFAULT ON NULL rawtohex(sys_guid() ) NOT NULL ENABLE, 
	"REF_IMAGE_ID" VARCHAR2(32 CHAR), 
	"QUALITY" FLOAT(126), 
	"COMPRESSION_ALGORITHM_ID" VARCHAR2(32 CHAR), 
	"BLOB_VALUE" BLOB, 
	"QUALITY_ALGORITHM_ID" VARCHAR2(32 CHAR), 
	"DEVICE_TYPE_ID" VARCHAR2(32 CHAR), 
	"LIFETIME" NUMBER, 
	"MIME_TYPE" VARCHAR2(50 CHAR), 
	"WIDTH" NUMBER, 
	"HEIGHT" NUMBER, 
	"DPI" NUMBER, 
	"DPI_X" NUMBER, 
	"DPI_Y" NUMBER, 
	"HREF" VARCHAR2(200 CHAR), 
	"FILTER" VARCHAR2(4000 CHAR), 
	"DELETE_CANDIDATE" CHAR(1 CHAR), 
	"CREATED_BY" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"CREATED_AT" TIMESTAMP (6) DEFAULT ON NULL systimestamp NOT NULL ENABLE, 
	"LAST_UPDATED_BY" VARCHAR2(255 CHAR), 
	"LAST_UPDATED_AT" TIMESTAMP (6), 
	"DML_TYPE" VARCHAR2(1 CHAR) DEFAULT ON NULL 'I' NOT NULL ENABLE
   )   NO INMEMORY ;
  ALTER TABLE "DL_BLACKLIST"."IMAGES" ADD CONSTRAINT "IMAGES_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE;
  ALTER TABLE "DL_BLACKLIST"."IMAGES" ADD CONSTRAINT "IMAGES_COMPRESSION_ALGO_ID_FK" FOREIGN KEY ("COMPRESSION_ALGORITHM_ID")
	  REFERENCES "DL_BLACKLIST"."COMPRESSION_ALGORITHMS" ("ID") ENABLE;
  ALTER TABLE "DL_BLACKLIST"."IMAGES" ADD CONSTRAINT "IMAGES_DEVICE_TYPE_ID_FK" FOREIGN KEY ("DEVICE_TYPE_ID")
	  REFERENCES "DL_BLACKLIST"."DEVICE_TYPES" ("ID") ENABLE;
  ALTER TABLE "DL_BLACKLIST"."IMAGES" ADD CONSTRAINT "IMAGES_QUALITY_ALGO_ID_FK" FOREIGN KEY ("QUALITY_ALGORITHM_ID")
	  REFERENCES "DL_BLACKLIST"."QUALITY_ALGORITHMS" ("ID") ENABLE;
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."ID" IS 'Artificial primary key';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."REF_IMAGE_ID" IS 'Reference Image Unique Identifier';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."QUALITY" IS 'Information concerning the Image Quality';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."COMPRESSION_ALGORITHM_ID" IS 'Unique Identifier of the Compression Algorithm';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."BLOB_VALUE" IS 'Image storaged as BLOB';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."QUALITY_ALGORITHM_ID" IS 'Unique Identifier of the Quality Algorithm';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."DEVICE_TYPE_ID" IS 'Unique Identifier of the Device Type Algorithm';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."LIFETIME" IS 'Image Lifetime Information';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."MIME_TYPE" IS 'MIME Type Information for the image';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."WIDTH" IS 'Image width';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."HEIGHT" IS 'Image height';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."DPI" IS 'Image DPI';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."DPI_X" IS 'Image DPI X';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."DPI_Y" IS 'Image DPI Y';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."HREF" IS 'Image html href link';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."FILTER" IS 'Image filter';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."DELETE_CANDIDATE" IS 'Flag if image might be a candidate to be deleted';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."CREATED_BY" IS 'Created by User name';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."CREATED_AT" IS 'Created at timestamp';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."LAST_UPDATED_BY" IS 'Modified by User name';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."LAST_UPDATED_AT" IS 'Modified at timestamp';
   COMMENT ON COLUMN "DL_BLACKLIST"."IMAGES"."DML_TYPE" IS 'What type of DML was the last change of the record';
  CREATE INDEX "DL_BLACKLIST"."IMAGES_COMPRESSION_ALGO_ID_IDX" ON "DL_BLACKLIST"."IMAGES" ("COMPRESSION_ALGORITHM_ID") 
  ;
CREATE INDEX "DL_BLACKLIST"."IMAGES_DEVICE_TYPE_ID_IDX" ON "DL_BLACKLIST"."IMAGES" ("DEVICE_TYPE_ID") 
  ;
CREATE INDEX "DL_BLACKLIST"."IMAGES_QUALITY_ALGO_ID_IDX" ON "DL_BLACKLIST"."IMAGES" ("QUALITY_ALGORITHM_ID") 
  ;
CREATE INDEX "DL_BLACKLIST"."IMAGES_REF_IMAGE_ID_IDX" ON "DL_BLACKLIST"."IMAGES" ("REF_IMAGE_ID") 
  ;
CREATE UNIQUE INDEX "DL_BLACKLIST"."IMAGES_PK" ON "DL_BLACKLIST"."IMAGES" ("ID") 
  ;
CREATE UNIQUE INDEX "DL_BLACKLIST"."SYS_IL0000312625C00005$$" ON "DL_BLACKLIST"."IMAGES" (
  ;
  GRANT UPDATE ON "DL_BLACKLIST"."IMAGES" TO "PIBICSAPP";
  GRANT SELECT ON "DL_BLACKLIST"."IMAGES" TO "PIBICSAPP";
  GRANT SELECT ON "DL_BLACKLIST"."IMAGES" TO "SERVAPP";
  GRANT SELECT ON "DL_BLACKLIST"."IMAGES" TO "BIO_BD";
  GRANT DELETE ON "DL_BLACKLIST"."IMAGES" TO "DERMALOG_PROXY";
  GRANT INSERT ON "DL_BLACKLIST"."IMAGES" TO "DERMALOG_PROXY";
  GRANT SELECT ON "DL_BLACKLIST"."IMAGES" TO "DERMALOG_PROXY";
  GRANT UPDATE ON "DL_BLACKLIST"."IMAGES" TO "DERMALOG_PROXY";
  GRANT INSERT ON "DL_BLACKLIST"."IMAGES" TO "PIBICSAPP";
  GRANT SELECT ON "DL_BLACKLIST"."IMAGES" TO "DL_BORDERCONTROL";
  GRANT SELECT ON "DL_BLACKLIST"."IMAGES" TO "APPSUP";
  CREATE OR REPLACE EDITIONABLE TRIGGER "DL_BLACKLIST"."IMAGES$BIUR" BEFORE
    INSERT OR UPDATE ON dl_blacklist.images
    FOR EACH ROW
BEGIN
    IF
        inserting
    THEN
        :new.CREATED_BY := dl_common.pkg_session.get_audit_user ();
        :new.CREATED_AT := systimestamp;
        :new.LAST_UPDATED_BY := dl_common.pkg_session.get_audit_user ();
        :new.LAST_UPDATED_AT := systimestamp;
        :new.dml_type := 'I';
    ELSIF updating THEN
        :new.CREATED_BY :=:old.CREATED_BY;
        :new.CREATED_AT :=:old.CREATED_AT;
        :new.LAST_UPDATED_BY := dl_common.pkg_session.get_audit_user ();
        :new.LAST_UPDATED_AT := systimestamp;
        :new.dml_type := 'U';
    END IF;
END;
/
ALTER TRIGGER "DL_BLACKLIST"."IMAGES$BIUR" ENABLE;
