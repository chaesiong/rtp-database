
-- Generated by ORDS REST Data Services 18.4.0.r3541002
-- Schema: DL_BORDERCONTROL Date: removed for diff
--

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'DL_BORDERCONTROL',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'dl_bordercontrol',
      p_auto_rest_auth      => FALSE);

  ORDS.DEFINE_MODULE(
      p_module_name    => 'EVOA',
      p_base_path      => '/EVOA/',
      p_items_per_page => 0,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'EVOA',
      p_pattern        => 'search',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'EVOA',
      p_pattern        => 'search',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 0,
      p_mimes_allowed  => 'application/json',
      p_comments       => NULL,
      p_source         =>
'DECLARE
    --
    l_input_json       JSON_OBJECT_T;
    l_request_user     VARCHAR2(250 CHAR);
    l_request_system   VARCHAR2(250 CHAR);
    l_object_id        VARCHAR2(100 CHAR);
    --
    l_status_code INTEGER;
    l_status_msg  VARCHAR2(4000);
    l_js_status   JSON_OBJECT_T;
    l_result      CLOB;
    l_buffer      VARCHAR2(16384);
    l_offset      INTEGER := 1;
    l_amount      INTEGER := 16384;
    l_sqlcode     NUMBER;
    l_sqlerrm     VARCHAR2(32767);
    --
BEGIN
    l_js_status := JSON_OBJECT_T();
    owa_util.mime_header(''application/json'', true, ''UTF-8'');

    l_input_json := JSON_OBJECT_T(:body);
    l_request_user := l_input_json.get_string(''requestUser'');
    l_request_system := l_input_json.get_string(''requestSystem'');
    l_object_id := l_input_json.get_string(''objectId'');

    l_input_json.remove(''requestUser'');
    l_input_json.remove(''requestSystem'');
    l_input_json.remove(''objectId'');

    DL_BORDERCONTROL.PKG_EVOA_UTIL.search_evoa(p_request_clob => l_input_json.get_object(''RequestData'').to_clob()
                                               , p_user => l_request_user
                                               , p_system => l_request_system
                                               , p_object => ''MOVEMENT''
                                               , p_object_id => l_object_id
                                               , p_response_status_code => l_status_code
                                               , p_response_status_msg => l_status_msg
                                               , p_response_clob => l_result
                                               );

    BEGIN
        l_js_status.put(''code'', l_status_code);
        l_js_status.put(''message'', l_status_msg);
        l_js_status.put_Null(''stack'');

        htp.prn(''{"status":'');
        htp.prn(l_js_status.Stringify());
        htp.prn('',"candidates":'');

        LOOP
            DBMS_LOB.read(l_result, l_amount, l_offset, l_buffer);
            l_offset := l_offset + l_amount;
            htp.prn(l_buffer);
        END LOOP;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            htp.prn(''}'');
            DL_COMMON.PKG_UTIL.FreeTempLOB(l_result);
        WHEN others THEN
            DL_COMMON.PKG_UTIL.FormatErrMsg(l_sqlcode, l_sqlerrm);
            DL_COMMON.PKG_UTIL.FreeTempLOB(l_result);
            Raise_application_error(l_sqlcode, l_sqlerrm);
    END;

EXCEPTION
    WHEN OTHERS THEN
        DL_COMMON.PKG_UTIL.FormatErrMsg(l_sqlcode, l_sqlerrm);
        l_js_status.put(''code'', -1);
        l_js_status.put(''message'', ''ERROR'');
        l_js_status.put(''stack'', l_sqlerrm);
        htp.prn(''{"status":'');
        htp.prn(l_js_status.Stringify());
        htp.prn('',"candidates":{}'');
        htp.prn(''}'');
END;');



COMMIT;

END;


/
timing for: TIMER_REST_EXPORT
Elapsed: 00:00:00.09
