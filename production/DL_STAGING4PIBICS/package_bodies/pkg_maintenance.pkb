CREATE OR REPLACE EDITIONABLE PACKAGE BODY "DL_STAGING4PIBICS"."PKG_MAINTENANCE" AS
    mvlog_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(mvlog_exists
                         ,-12000);

    mvlog_does_not_exist EXCEPTION;
    PRAGMA EXCEPTION_INIT(mvlog_does_not_exist
                         ,-942);

    TYPE tablenames IS RECORD(
         mvlog pkg_utils.process_name
        ,syn   pkg_utils.process_name
        ,dummy pkg_utils.process_name);

    FUNCTION get_tablenames(p_table_name IN pkg_utils.process_name) RETURN tablenames IS
        l_res tablenames;
    BEGIN
        l_res.mvlog := upper('MLOG$_' || p_table_name);
        l_res.syn   := upper('MV_LOG_' || p_table_name);
        l_res.dummy := upper('MLOG_DUMMY_' || p_table_name);

        RETURN l_res;
    END get_tablenames;
    PROCEDURE disable_mvlog_for_table(p_table_name VARCHAR2
                                     ,p_force      IN BOOLEAN DEFAULT FALSE) IS
        l_cnt       NUMBER;
        l_cast      VARCHAR2(100);
        l_view_stmt VARCHAR2(4000);
        l_tabs      tablenames;
    BEGIN
        l_tabs := get_tablenames(p_table_name);
        SELECT listagg(cast_clause
                      ,',') within GROUP(ORDER BY cast_clause)
        INTO l_cast
        FROM (SELECT 'cast ( null as ' || CASE
                         WHEN col.data_type = 'VARCHAR2' THEN
                          col.data_type || '( ' || col.data_length || ')'
                         ELSE
                          col.data_type
                     END || ' ) AS ' || conc.column_name AS cast_clause
              FROM user_cons_columns conc
              INNER JOIN user_constraints cs
              ON conc.constraint_name = cs.constraint_name
              AND cs.constraint_type = 'P'
              INNER JOIN user_tab_columns col
              ON col.column_name = conc.column_name
              AND col.table_name = conc.table_name
              WHERE conc.table_name = p_table_name);
        BEGIN
            EXECUTE IMMEDIATE ' SELECT COUNT(*) INTO :lcnt  FROM  DL_STAGING4PIBICS.' || l_tabs.mvlog
                INTO l_cnt;
            IF l_cnt > 0
               AND p_force THEN
                EXECUTE IMMEDIATE ' BEGIN DELETE FROM  DL_STAGING4PIBICS.' || l_tabs.mvlog || '; COMMIT; END ; ';
            END IF;
            EXECUTE IMMEDIATE ' DROP MATERIALIZED VIEW LOG ON DL_STAGING4PIBICS.' || p_table_name;
        EXCEPTION
            WHEN mvlog_does_not_exist THEN
                NULL;
        END;
        l_view_stmt := 'create or replace view DL_STAGING4PIBICS.' || l_tabs.dummy || ' AS SELECT /* this view was generated by dl_staging4pibics.pkg_maintenance.disable_mvlog_for_table */
                    ' || l_cast || ',
                      CAST(NULL AS VARCHAR2(255)    ) AS  m_row$$          ,
                      CAST(NULL AS NUMBER           ) AS  sequence$$       ,
                      CAST(NULL AS VARCHAR2(1)      ) AS  dmltype$$        ,
                      CAST(NULL AS VARCHAR2(1)      ) AS  old_new$$        ,
                      CAST(NULL AS RAW(255)         ) AS  change_vector$$  ,
                      CAST(NULL AS NUMBER           ) AS  xid$$
                  from DL_STAGING4PIBICS.' || p_table_name || ' where 1 = 0';
        --    sys.dbms_output.put_line(l_view_stmt);
        EXECUTE IMMEDIATE l_view_stmt;
        EXECUTE IMMEDIATE '  CREATE OR REPLACE EDITIONABLE SYNONYM DL_STAGING4PIBICS.' || l_tabs.syn ||
                          ' for  DL_STAGING4PIBICS.' || l_tabs.dummy;
        EXECUTE IMMEDIATE ' GRANT SELECT, DELETE, REFERENCES  ON DL_STAGING4PIBICS.' || l_tabs.dummy ||
                          '       to DL_STAGING4PIBICS_INTF';

    END disable_mvlog_for_table;

    PROCEDURE disable_all_mvlogs(p_force IN BOOLEAN DEFAULT FALSE) IS
    BEGIN
        FOR r IN (SELECT process_name
                  FROM dl_staging4pibics.ops_pibics_load_processes p
                  WHERE kind = 'B'
                  AND shall_be_synced = 'Y'
                  ORDER BY process_name)
        LOOP
            BEGIN
                disable_mvlog_for_table(p_table_name => r.process_name
                                       ,p_force      => p_force);
            EXCEPTION
                WHEN err_table_does_not_exist THEN
                    NULL;
            END;
        END LOOP;
    END disable_all_mvlogs;

    PROCEDURE enable_mvlog_for_table(p_table_name VARCHAR2) IS
        l_tabs tablenames;
    BEGIN
        l_tabs := get_tablenames(p_table_name);
        BEGIN
            EXECUTE IMMEDIATE ' CREATE MATERIALIZED VIEW LOG ON DL_STAGING4PIBICS.' || p_table_name ||
                              ' WITH PRIMARY KEY, ROWID, SEQUENCE, COMMIT SCN including NEW VALUES';
        EXCEPTION
            WHEN mvlog_exists THEN
                NULL;
        END;
        EXECUTE IMMEDIATE '  CREATE OR REPLACE EDITIONABLE SYNONYM DL_STAGING4PIBICS.' || l_tabs.syn ||
                          ' for  DL_STAGING4PIBICS.' || l_tabs.mvlog;
        EXECUTE IMMEDIATE ' GRANT SELECT, DELETE, REFERENCES  ON DL_STAGING4PIBICS.' || l_tabs.mvlog ||
                          '       to DL_STAGING4PIBICS_INTF';
        BEGIN
            EXECUTE IMMEDIATE ' DROP VIEW   DL_STAGING4PIBICS.' || l_tabs.dummy;
        EXCEPTION
            WHEN err_table_does_not_exist THEN
                NULL;
        END;
    END enable_mvlog_for_table;

    PROCEDURE enable_all_mvlogs IS
    BEGIN
        FOR r IN (SELECT process_name
                  FROM dl_staging4pibics.ops_pibics_load_processes p
                  WHERE kind = 'B'
                  AND shall_be_synced = 'Y'
                  ORDER BY process_name)
        LOOP
            enable_mvlog_for_table(p_table_name => r.process_name);
        END LOOP;
    END enable_all_mvlogs;
END pkg_maintenance;
/
  GRANT EXECUTE ON "DL_STAGING4PIBICS"."PKG_MAINTENANCE" TO "DL_STAGING4PIBICS_INTF";
  GRANT EXECUTE ON "DL_STAGING4PIBICS"."PKG_MAINTENANCE" TO "DERMALOG_PROXY";
  GRANT EXECUTE ON "DL_STAGING4PIBICS"."PKG_MAINTENANCE" TO "BIOAPPREPORT";
  GRANT EXECUTE ON "DL_STAGING4PIBICS"."PKG_MAINTENANCE" TO "BIOSUPPORT";
